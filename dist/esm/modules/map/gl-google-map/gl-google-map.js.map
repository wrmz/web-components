{"version":3,"file":"gl-google-map.js","sources":["../../../../../src/modules/map/gl-google-map/gl-google-map.js"],"sourcesContent":["/*global google*/\nimport { GlMap } from '../gl-map/gl-map.js';\nimport GlGoogleImageFactory from './gl-google-image.factory.js';\n\n/**\n * @injectHTML\n */\nexport class GlGoogleMap {\n    static async getStyle(url) {\n        if (!url) return null;\n\n        const response = await fetch(url);\n        const json = await response.json();\n\n        return json;\n    }\n\n    #id = '';\n    #previousMode;\n    #previousState;\n    #currentMode = GlMap.MODES.DEFAULT;\n    #currentState = GlMap.STATES.LOADING;\n    #map;\n    #mapElem;\n    #legendElem;\n    #imageElem;\n    #detailElem;\n    #glMarkers = [];\n    #markers = [];\n    #subscribers = [];\n    #activeMarker;\n\n    // Map layers\n    #styleLayer;\n    #imageLayer;\n\n    constructor(id, mapElem, {\n        latitude,\n        longitude,\n        mapStyle = null,\n        legendElem = null,\n        imageElem = null,\n        markerElems = [],\n        detailElem = null\n    }) {\n        this.#id = id;\n        this.#mapElem = mapElem;\n        this.#legendElem = legendElem;\n        this.#imageElem = imageElem;\n        this.#detailElem = detailElem;\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.mapStyle = mapStyle;\n        this.loadDetailTimeout = undefined;\n        this.imageNE = 0.0;\n        this.imageNW = 0.0;\n        this.imageSW = 0.0;\n        this.imageSE = 0.0;\n        this.mapControls = {\n            recenter: null,\n            resize: null,\n            drag: null,\n            addMarker: null,\n            removeMarker: null,\n        };\n\n        this.loadTimeout = null;\n\n        this.emitMarkerEvent = this.emitMarkerEvent.bind(this);\n        this.createMarker = this.createMarker.bind(this);\n        this.recenterMap = this.recenterMap.bind(this);\n        this.restrictPanning = this.restrictPanning.bind(this);\n        this.toggleResizeState = this.toggleResizeState.bind(this);\n        this.toggleDragState = this.toggleDragState.bind(this);\n        this.toggleAddMarkerState = this.toggleAddMarkerState.bind(this);\n        this.toggleRemoveMarkerState = this.toggleRemoveMarkerState.bind(this);\n        this.onLoaded = this.onLoaded.bind(this);\n        this.onAddMarkerClick = this.onAddMarkerClick.bind(this);\n\n        this.map = new google.maps.Map(this.#mapElem, {\n            center: { lat: this.latitude, lng: this.longitude },\n            mapTypeControl: false,\n            scaleControl: false,\n            streetViewControl: false,\n            fullscreenControl: false,\n            zoomControlOptions: {\n                position: google.maps.ControlPosition.TOP_LEFT\n            },\n            zoom: 17,\n            maxZoom: 19,\n            minZoom: 10,\n        });\n        this.map.addListener('dragend', this.restrictPanning);\n        this.markers = markerElems;\n\n        this.setMapStyle();\n        this.loadImage();\n        this.createLegendControl();\n        this.createCenterMapControl();\n        this.createResizeMapControl();\n        this.createDragMapControl();\n        this.createAddMarkerControl();\n        this.createRemoveMarkerControl();\n        this.loadTimeout = setTimeout(this.onLoaded, 1000);\n    }\n\n    async setMapStyle() {\n        const mapStyle = await GlGoogleMap.getStyle(this.mapStyle);\n\n        if (mapStyle) {\n            this.styleLayer = new google.maps.StyledMapType(mapStyle, { name: `Map${this.#id}` });\n            this.map.mapTypes.set(`map_${this.#id}`, this.styleLayer);\n            this.map.setMapTypeId(`map_${this.#id}`);\n        }\n    }\n\n    loadImage() {\n        if (!this.#imageElem) return;\n        const imageUrl = this.#imageElem.getAttribute('src');\n        if (!imageUrl) return;\n        this.#imageLayer = GlGoogleImageFactory.create(this, this.#imageElem);\n    }\n\n    /**\n     * Generates a marker\n     *\n     * @param {GlMarker} marker\n     * @returns {google.maps.Marker}\n     */\n    createMarker(marker) {\n        const mapMarker = new google.maps.Marker({\n            map: this.map,\n            id: marker.id,\n            type: 'client',\n            status: marker.status,\n            color: marker.color,\n            isSelected: false,\n            position: { lat: marker.latitude, lng: marker.longitude },\n            path: marker.path,\n            icon: {\n                path: marker.path,\n                fillColor: marker.color,\n                fillOpacity: 1,\n                strokeWeight: 0,\n                strokeColor: '#ffffff',\n                anchor: new google.maps.Point(10, 22)\n            },\n            animation: google.maps.Animation.DROP,\n            draggable: this.isAdmin,\n        });\n\n        marker.mapMarker = mapMarker;\n        mapMarker.addListener('mouseover', this.onMarkerMouseover.bind(this, marker, mapMarker));\n        mapMarker.addListener('mouseout', this.onMarkerMouseout.bind(this, marker, mapMarker));\n        mapMarker.addListener('dragend', this.onMarkerDragend.bind(this, marker, mapMarker));\n        mapMarker.addListener('click', this.onMarkerClick.bind(this, marker, mapMarker));\n        return mapMarker;\n    }\n\n    /**\n     * Emits a marker event from GlGoogleMap\n     *\n     * @this GlGoogleMap\n     * @param {string} eventType\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.event} event\n     * @emits CustomEvent\n     */\n    emitMarkerEvent(eventType, glMarker, marker, event) {\n        const customEvent = new CustomEvent(eventType, {\n            detail: {\n                map: this,\n                marker: marker,\n                glMarker: glMarker,\n                pixel: event.pixel,\n                domEvent: event.domEvent,\n                position: {\n                    latitude: event.latLng.lat(),\n                    longitude: event.latLng.lng()\n                }\n            }\n        });\n\n        this.dispatchEvent(customEvent);\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker click event\n     *\n     * @this GlGoogleMap\n     * @param {GlGoogleMap} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.event} event\n     * @emits GlGoogleMap#click\n     */\n    onMarkerClick(glMarker, marker, event) {\n        this.markers.forEach((m) => {\n            if (m.type !== 'admin') {\n                if (m.id === marker.id) {\n                    m.isSelected = true;\n                    m.setIcon({\n                        path: glMarker.path,\n                        fillColor: 'white',\n                        fillOpacity: 1,\n                        strokeWeight: 0,\n                        anchor: new google.maps.Point(10, 22)\n                    });\n                } else {\n                    m.isSelected = false;\n                    m.setIcon({\n                        path: glMarker.path,\n                        fillColor: m.color,\n                        fillOpacity: 1,\n                        strokeWeight: 0,\n                        anchor: new google.maps.Point(10, 22)\n                    });\n                }\n            }\n        });\n\n        this.panToSelectedMarker(marker);\n        this.notifySubscribers('marker-click', { glMarker, event });\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker drag event\n     *\n     * @this GlGoogleMap\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Event} event\n     * @emits GlGoogleMap#drag\n     */\n    onMarkerDrag(glMarker, event) {\n        this.notifySubscribers('marker-drag', { glMarker, event });\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker dragend event\n     *\n     * @this GlGoogleMap\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.Event} event\n     * @emits GlGoogleMap#dragend\n     */\n    onMarkerDragend(glMarker, marker, event) {\n        this.notifySubscribers('marker-dragend', { glMarker, event });\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker dragstart event\n     *\n     * @this GlGoogleMap\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.Event} event\n     * @emits GlGoogleMap#dragstart\n     */\n    onMarkerDragstart(glMarker, marker, event) {\n        this.notifySubscribers('marker-dragstart', { glMarker, event });\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker mouseover event\n     *\n     * @this GlGoogleMap\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.event} event\n     * @emits GlGoogleMap#mouseover\n     */\n    onMarkerMouseover(glMarker, marker, event) {\n        if (!marker.isSelected) {\n            marker.setIcon({\n                path: glMarker.path,\n                fillColor: 'white',\n                fillOpacity: 1,\n                strokeWeight: 0,\n                anchor: new google.maps.Point(10, 22)\n            });\n        }\n\n        this.notifySubscribers('marker-mouseover', { glMarker, event });\n    }\n\n    /**\n     * ons & dispatches from GlGoogleMap a marker mouseout event\n     *\n     * @this GlGoogleMap\n     * @param {GlMarker} glMarker\n     * @param {google.maps.Marker} marker\n     * @param {google.maps.event} event\n     * @emits GlGoogleMap#mouseout\n     */\n    onMarkerMouseout(glMarker, marker, event) {\n        if (!marker.isSelected) {\n            marker.setIcon({\n                path: glMarker.path,\n                fillColor: marker.color,\n                fillOpacity: 1,\n                strokeWeight: 0,\n                anchor: new google.maps.Point(10, 22)\n            });\n        }\n\n        this.notifySubscribers('marker-mouseout', { glMarker, event });\n    }\n\n    onLoaded() {\n        clearTimeout(this.loadTimeout);\n        this.loadTimeout = null;\n        this.state = GlMap.STATES.DEFAULT;\n    }\n\n    /**\n     * Creates a button that fires a click event ond by `this.recenterMap`.\n     */\n    createCenterMapControl() {\n        const recenterButton = document.createElement('button');\n        recenterButton.type = 'button';\n        recenterButton.title = 'Reorient the map to the Image position.';\n        recenterButton.className = 'gl-map__button gl-map__recenter';\n        recenterButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"currentColor\" d=\"M10 0c5.52285 0 10 4.47715 10 10s-4.47715 10-10 10S0 15.52285 0 10 4.47715 0 10 0ZM3.72462 10.63068h-2.4409c.30834 4.32356 3.76204 7.77726 8.0856 8.0856v-2.4409c-2.97945-.29584-5.34886-2.66525-5.6447-5.6447Zm14.99251-.01202-.04376.00775-.07354.00424-2.32445.00007c-.29584 2.97941-2.66525 5.34882-5.6447 5.64466v2.4409c4.32757-.30863 7.78366-3.76844 8.08645-8.09762Zm-8.08627-4.35022-.0002.89139c0 .3483-.28236.63065-.63066.63065-.32342 0-.58998-.24346-.62641-.5571l-.00424-.07355-.00021-.8914c-1.58435.2659-2.8348 1.51636-3.1007 3.1007l1.1959.00022c.3483 0 .63065.28235.63065.63065 0 .32342-.24345.58998-.5571.62641l-.07355.00424-1.1959.00021c.2659 1.58435 1.51635 2.8348 3.1007 3.1007l.0002-1.21748c0-.3483.28236-.63065.63066-.63065.32342 0 .58998.24346.62641.5571l.00424.07355.00021 1.21748c1.58435-.2659 2.8348-1.51635 3.1007-3.1007l-1.38427-.0002c-.3483 0-.63065-.28236-.63065-.63066 0-.32342.24346-.58998.5571-.62641l.07355-.00424 1.38427-.00021c-.2659-1.58435-1.51635-2.8348-3.1007-3.1007Zm-.00018-4.98472v2.4409c2.97945.29584 5.34886 2.66525 5.6447 5.64466l2.32445.00007a.6341.6341 0 0 1 .11726.01088c-.30275-4.32807-3.75884-7.78788-8.0864-8.09651Zm-9.34696 8.0856h2.4409c.29584-2.97945 2.66525-5.34886 5.6447-5.6447v-2.4409c-4.32356.30834-7.77726 3.76204-8.0856 8.0856Z\"/></svg>';\n        this.mapControls.recenter = recenterButton;\n        this.mapControls.recenter.addEventListener('click', this.recenterMap, false);\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.mapControls.recenter);\n    }\n\n    createResizeMapControl() {\n        const resizeButton = document.createElement('button');\n        resizeButton.type = 'button';\n        resizeButton.title = 'Resize the Image.';\n        resizeButton.className = 'gl-map__button gl-map__resize';\n        resizeButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"m19.831.574.051.061.064.111.018.046.02.065.01.051.006.093v16a.625.625 0 0 1-1.243.092l-.007-.092V2.508l-3.756 3.758.006.11v13a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1v-13a1 1 0 0 1 1-1h13l.109.006 3.757-3.756H3.375A.625.625 0 0 1 3.283.383l.092-.007h16c.04 0 .079.003.117.01l.06.015.067.024.063.031.068.045.081.073ZM12.5 7.875h-10v10h10v-10Z\"/></svg>';\n        this.mapControls.resize = resizeButton;\n        this.mapControls.resize.style.display = 'none';\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.mapControls.resize);\n    }\n\n    createDragMapControl() {\n        const dragButton = document.createElement('button');\n        dragButton.type = 'button';\n        dragButton.title = 'Drag the Image.';\n        dragButton.className = 'gl-map__button gl-map__drag';\n        dragButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"21\" viewBox=\"0 0 21 21\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"m10.346.875.09.01.078.019.058.021.046.022a.624.624 0 0 1 .15.11l2.17 2.172a.625.625 0 0 1-.813.944l-.07-.06-1.104-1.105v7.242h7.24l-1.103-1.104a.625.625 0 0 1 .814-.944l.07.06 2.171 2.171.064.075.059.099.037.1.02.101.003.088-.01.09-.019.077-.021.058-.022.046a.624.624 0 0 1-.11.15l-2.172 2.17a.625.625 0 0 1-.944-.813l.06-.07 1.104-1.104H10.95v7.241l1.105-1.103a.625.625 0 0 1 .944.813l-.06.07-2.171 2.171-.075.064-.099.06-.1.037-.101.019-.088.003-.09-.01-.077-.018-.058-.022-.046-.022a.624.624 0 0 1-.15-.11l-2.17-2.171a.625.625 0 0 1 .813-.945l.07.06 1.104 1.104V11.5H2.46l1.103 1.104a.625.625 0 0 1-.813.944l-.07-.06-2.171-2.171-.064-.075-.06-.099-.037-.1-.019-.101-.003-.088.01-.09.018-.077.022-.058.022-.046a.624.624 0 0 1 .11-.15l2.171-2.17a.625.625 0 0 1 .945.813l-.06.07-1.105 1.104H9.7V3.008L8.598 4.112a.625.625 0 0 1-.944-.813l.06-.07 2.17-2.171.075-.064.1-.059.1-.038.101-.019.087-.003Z\"/></svg>';\n        this.mapControls.drag = dragButton;\n        this.mapControls.drag.style.display = 'none';\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.mapControls.drag);\n    }\n\n    createAddMarkerControl() {\n        const addMarkerButton = document.createElement('button');\n        addMarkerButton.type = 'button';\n        addMarkerButton.title = 'Add a new marker.';\n        addMarkerButton.className = 'gl-map__button gl-map__add-marker';\n        addMarkerButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"23\" viewBox=\"0 0 20 23\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M10 .374c5.523 0 10 4.477 10 10 0 7.508-5.6 12.49-10 12.49S0 18.155 0 10.374c0-5.523 4.477-10 10-10Zm0 3.475A6.526 6.526 0 1 0 10 16.9 6.526 6.526 0 0 0 10 3.85Zm0 2.562c.314 0 .574.23.618.532l.007.093-.001 2.624h2.626a.625.625 0 0 1 .092 1.244l-.092.007-2.626-.001.001 2.626a.625.625 0 0 1-1.243.092l-.007-.092-.001-2.626H6.75a.625.625 0 0 1-.092-1.243l.092-.006 2.624-.001.001-2.624c0-.346.28-.625.625-.625Z\"/></svg>';\n        this.mapControls.addMarker = addMarkerButton;\n        this.mapControls.addMarker.style.display = 'none';\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.mapControls.addMarker);\n    }\n\n    createRemoveMarkerControl() {\n        const removeMarkerButton = document.createElement('button');\n        removeMarkerButton.type = 'button';\n        removeMarkerButton.title = 'Add a new marker.';\n        removeMarkerButton.className = 'gl-map__button gl-map__remove-marker';\n        removeMarkerButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"24\" viewBox=\"0 0 20 24\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M10 .677c5.523 0 10 4.477 10 10 0 7.508-5.6 12.49-10 12.49s-10-4.71-10-12.49c0-5.523 4.477-10 10-10Zm0 3.474a6.526 6.526 0 1 0 0 13.051 6.526 6.526 0 0 0 0-13.051Zm3.25 5.812a.625.625 0 0 1 .092 1.243l-.092.007h-6.5a.625.625 0 0 1-.092-1.243l.092-.007h6.5Z\"/></svg>';\n        this.mapControls.removeMarker = removeMarkerButton;\n        this.mapControls.removeMarker.style.display = 'none';\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.mapControls.removeMarker);\n    }\n\n    createLegendControl() {\n        this.mapControls.legend = this.#legendElem;\n        this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(this.mapControls.legend);\n    }\n\n    recenterMap() {\n        if (this.#imageLayer) {\n            this.#imageLayer.recenterMap();\n        }\n    }\n\n    restrictPanning() {\n        const imageBounds = this.#imageLayer.bounds;\n        const mapBounds = this.map.getBounds();\n        const newMapCenter = this.map.getCenter();\n\n        if (!imageBounds.contains(newMapCenter)) {\n            // Find the nearest point within the image bounds\n            const newLat = Math.max(imageBounds.getSouthWest().lat(), Math.min(imageBounds.getNorthEast().lat(), newMapCenter.lat()));\n            const newLng = Math.max(imageBounds.getSouthWest().lng(), Math.min(imageBounds.getNorthEast().lng(), newMapCenter.lng()));\n\n            // Set the map's center to the nearest point\n            this.map.panTo(new google.maps.LatLng(newLat, newLng));\n        }\n    }\n\n    toggleResizeState() {\n        if (!this.#imageLayer) return;\n        this.state = this.state === GlMap.STATES.RESIZING\n            ? GlMap.STATES.DEFAULT\n            : GlMap.STATES.RESIZING;\n    }\n\n    toggleDragState() {\n        if (!this.#imageLayer) return;\n        this.state = this.state === GlMap.STATES.DRAGGING\n            ? GlMap.STATES.DEFAULT\n            : GlMap.STATES.DRAGGING;\n    }\n\n    toggleAddMarkerState() {\n        this.state = this.state === GlMap.STATES.ADDING_MARKER\n            ? GlMap.STATES.DEFAULT\n            : GlMap.STATES.ADDING_MARKER;\n    }\n\n    toggleRemoveMarkerState() {\n        this.state = this.state === GlMap.STATES.REMOVING_MARKER\n            ? GlMap.STATES.DEFAULT\n            : GlMap.STATES.REMOVING_MARKER;\n    }\n\n    /**\n     * Closes the detail\n     */\n    closeDetail() {\n        this.markers.forEach((marker) => {\n            if (marker.isSelected && marker.type !== 'admin') {\n                marker.setIcon({\n                    path: marker.path,\n                    fillColor: marker.color,\n                    fillOpacity: 1,\n                    strokeWeight: 0,\n                    anchor: new google.maps.Point(10, 22)\n                });\n            }\n        });\n    }\n\n    /**\n     * Converts google latLng coordinates to div pixel coordinates\n     *\n     * @param {google.maps.LatLng} latLng\n     * @returns {Object}\n     */\n    getPixelCoordinate(latLng) {\n        const overlayProjection = this.#imageLayer.getProjection();\n        return overlayProjection.fromLatLngToDivPixel(latLng);\n    }\n\n    setAdminMode(isAdmin) {\n        if (this.map) {\n            this.map.isAdmin = isAdmin;\n        }\n        if (this.#imageLayer) {\n            this.#imageLayer.isAdmin = isAdmin;\n        }\n\n        this.markers.forEach((marker) => {\n            marker.setDraggable(this.isAdmin);\n        });\n    }\n\n    /**\n     * Pans the map to a marker which has been selected or clicked\n     * Currently assumes conjunction of `GlGoogleMap.showDetail`,\n     * this the 100px x-coordinate offset\n     *\n     * @param {google.maps.Marker} marker\n     * @param {number=} [offsetX=100]\n     * @param {number=} [offsetY=0]\n     */\n    panToSelectedMarker(marker, offsetX = 100, offsetY = 0) {\n        const projection = this.#imageLayer.getProjection();\n        const pixelPosition = projection.fromLatLngToDivPixel(marker.getPosition());\n        const newPixelPosition = {\n            x: pixelPosition.x + offsetX,\n            y: pixelPosition.y + offsetY\n        };\n\n        this.map.panTo(projection.fromDivPixelToLatLng(newPixelPosition));\n    }\n\n    /**\n     * Handles clicks on the map while in the GlMap.STATES.ADDING_MARKER state\n     * @param {google.maps.MapMouseEvent} e - The google maps click event\n     */\n    onAddMarkerClick(e) {\n        const newMarker = document.createElement('gl-marker');\n        newMarker.latitude = e.latLng.lat();\n        newMarker.longitude = e.latLng.lng();\n        newMarker.status = 'model';\n        newMarker.color = '#60b3df';\n        newMarker.path = 'M10 0c5.52285 0 10 4.47715 10 10 0 7.50794-5.59957 12.48988-10 12.48988S0 17.78101 0 10C0 4.47715 4.47715 0 10 0Zm0 3.4743c-3.60404 0-6.5257 2.92166-6.5257 6.5257 0 3.60404 2.92166 6.5257 6.5257 6.5257 3.60404 0 6.5257-2.92166 6.5257-6.5257 0-3.60404-2.92166-6.5257-6.5257-6.5257Zm0 3.0039c1.94504 0 3.5218 1.57676 3.5218 3.5218 0 1.94504-1.57676 3.5218-3.5218 3.5218-1.94504 0-3.5218-1.57676-3.5218-3.5218 0-1.94504 1.57676-3.5218 3.5218-3.5218Z';\n\n        this.#activeMarker = newMarker;\n\n        this.notifySubscribers('marker-added', {\n            glMarker: this.#activeMarker\n        });\n\n        this.state = GlMap.STATES.POSITIONING_MARKER;\n    }\n\n    /**\n     * Switches between GlGoogleMap Modes ADMIN and DEFAULT modes.\n     */\n    switchModes() {\n        // Cleanup\n        if (this.#previousMode === GlMap.MODES.ADMIN) {\n            this.mapControls.resize.style.display = 'none';\n            this.mapControls.drag.style.display = 'none';\n            this.mapControls.addMarker.style.display = 'none';\n            this.mapControls.removeMarker.style.display = 'none';\n            this.mapControls.resize.removeEventListener('click', this.toggleResizeState);\n            this.mapControls.drag.removeEventListener('click', this.toggleDragState);\n            this.mapControls.addMarker.removeEventListener('click', this.toggleAddMarkerState);\n            this.mapControls.removeMarker.removeEventListener('click', this.toggleRemoveMarkerState);\n            if (this.map) {\n                this.map.addListener('dragend', this.restrictPanning);\n            }\n        }\n\n        // New mode settings\n        if (this.mode === GlMap.MODES.ADMIN) {\n            this.mapControls.resize.style.display = '';\n            this.mapControls.drag.style.display = '';\n            this.mapControls.addMarker.style.display = '';\n            this.mapControls.removeMarker.style.display = '';\n            this.mapControls.resize.addEventListener('click', this.toggleResizeState, false);\n            this.mapControls.drag.addEventListener('click', this.toggleDragState, false);\n            this.mapControls.addMarker.addEventListener('click', this.toggleAddMarkerState, false);\n            this.mapControls.removeMarker.addEventListener('click', this.toggleRemoveMarkerState, false);\n            if (this.map) {\n                google.maps.event.clearListeners(this.map, 'dragend');\n            }\n        }\n    }\n\n    /**\n     * Switches between GlGoogleMap States\n     */\n    switchStates() {\n        // Cleanup\n        switch (this.#previousState) {\n            case GlMap.STATES.LOADING:\n                break;\n            case GlMap.STATES.RESIZING:\n                this.markers.forEach((m) => m.setVisible(true));\n                this.#imageLayer.state = GlMap.STATES.DEFAULT;\n                this.mapControls.resize.classList.remove('active');\n                break;\n            case GlMap.STATES.DRAGGING:\n                this.markers.forEach((m) => m.setVisible(true));\n                this.#imageLayer.state = GlMap.STATES.DEFAULT;\n                this.mapControls.drag.classList.remove('active');\n                break;\n            case GlMap.STATES.ADDING_MARKER:\n                google.maps.event.clearListeners(this.map, 'click');\n                this.mapControls.addMarker.classList.remove('active');\n                this.markers.forEach((m) => m.setOpacity(1));\n                break;\n            case GlMap.STATES.POSITIONING_MARKER:\n                this.#activeMarker.mapMarker.setDraggable(false);\n                this.#activeMarker = null;\n                break;\n            case GlMap.STATES.REMOVING_MARKER:\n                this.markers.forEach((m) => m.setOpacity(1));\n                this.mapControls.removeMarker.classList.remove('active');\n                break;\n            case GlMap.STATES.CONFIRMING:\n                break;\n            default:\n                break;\n        }\n\n        switch (this.state) {\n            case GlMap.STATES.LOADING:\n                this.pingLoadState(this);\n                break;\n            case GlMap.STATES.RESIZING:\n                this.markers.forEach((m) => m.setVisible(false));\n                this.#imageLayer.state = GlMap.STATES.RESIZING;\n                this.mapControls.resize.classList.add('active');\n                break;\n            case GlMap.STATES.DRAGGING:\n                this.markers.forEach((m) => m.setVisible(false));\n                this.#imageLayer.state = GlMap.STATES.DRAGGING;\n                this.mapControls.drag.classList.add('active');\n                break;\n            case GlMap.STATES.ADDING_MARKER:\n                this.markers.forEach((m) => m.setOpacity(0.5));\n                this.mapControls.addMarker.classList.add('active');\n                this.map.addListener('click', this.onAddMarkerClick);\n                break;\n            case GlMap.STATES.POSITIONING_MARKER:\n                this.#activeMarker.mapMarker.setDraggable(true);\n                break;\n            case GlMap.STATES.REMOVING_MARKER:\n                this.markers.forEach((m) => m.setOpacity(0.5));\n                this.mapControls.removeMarker.classList.add('active');\n                break;\n            case GlMap.STATES.CONFIRMING:\n                break;\n            default:\n                this.pingLoadState(this);\n                break;\n        }\n        this.notifySubscribers('state', this.state);\n    }\n\n    pingLoadState(component) {\n        let fullyLoaded = true;\n\n        if (this.#imageLayer.state === GlMap.STATES.LOADING) {\n            fullyLoaded = false;\n        }\n\n        if (fullyLoaded) {\n            this.notifySubscribers('load', {\n                state: this.state,\n                progress: 70\n            });\n        }\n\n        if (this.state === GlMap.STATES.LOADING) {\n            fullyLoaded = false;\n        }\n\n        if (fullyLoaded) {\n            this.notifySubscribers('load', {\n                state: this.state,\n                progress: 100\n            });\n        }\n    }\n\n    subscribe(callback) {\n        this.#subscribers.push(callback);\n    }\n\n    notifySubscribers(...data) {\n        this.#subscribers.forEach((callback) => callback(...data));\n    }\n\n    /**\n     * Gets the current mode of the GlGoogleMap instance.\n     * @returns {string} The current mode\n     */\n    get mode() {\n        return this.#currentMode;\n    }\n\n    /**\n     * Sets the current mode of the GlGoogleMap instance, if the provided mode is valid.\n     * @param {string} newMode - The new mode to set.\n     */\n    set mode(newMode) {\n        if (!newMode || newMode === this.#currentMode) return;\n        if (Object.values(GlMap.MODES).includes(newMode)) {\n            this.#previousMode = this.#currentMode;\n            this.#currentMode = newMode;\n            this.switchModes();\n        } else {\n            console.error(`Invalid mode: ${newMode}`);\n        }\n    }\n\n    /**\n     * Gets the current state of the GlGoogleMap instance\n     * @returns {string} The current state\n     */\n    get state() { return this.#currentState; }\n\n    /**\n     * Sets the current state of the GlGoogleMap instance, if the provided state is valid.\n     * @param {string} newState - The new state to set.\n     */\n    set state(newState) {\n        if (!newState || newState === this.#currentState) return;\n        if (Object.values(GlMap.STATES).includes(newState)) {\n            this.#previousState = this.#currentState;\n            this.#currentState = newState;\n            this.switchStates();\n        } else {\n            console.error(`Invalid state: ${newState}`);\n        }\n    }\n\n    get map() {\n        return this.#map;\n    }\n\n    set map(newMap) {\n        this.#map = newMap instanceof google.maps.Map\n            ? newMap\n            : null;\n    }\n\n    get markers() {\n        return this.#markers;\n    }\n\n    set markers(glMarkers) {\n        this.#glMarkers = [...glMarkers];\n        this.#markers = this.#glMarkers.map((glMarker) => {\n            // If GlMarker has already been mapped, return it\n            if (glMarker.mapMarker) return glMarker.mapMarker;\n            return this.createMarker(glMarker);\n        });\n    }\n}\n"],"names":["GlGoogleMap","static","url","response","fetch","json","id","previousMode","previousState","currentMode","GlMap","MODES","DEFAULT","currentState","STATES","LOADING","map","mapElem","legendElem","imageElem","detailElem","glMarkers","markers","subscribers","activeMarker","styleLayer","imageLayer","constructor","latitude","longitude","mapStyle","markerElems","this","loadDetailTimeout","undefined","imageNE","imageNW","imageSW","imageSE","mapControls","recenter","resize","drag","addMarker","removeMarker","loadTimeout","emitMarkerEvent","bind","createMarker","recenterMap","restrictPanning","toggleResizeState","toggleDragState","toggleAddMarkerState","toggleRemoveMarkerState","onLoaded","onAddMarkerClick","google","maps","Map","center","lat","lng","mapTypeControl","scaleControl","streetViewControl","fullscreenControl","zoomControlOptions","position","ControlPosition","TOP_LEFT","zoom","maxZoom","minZoom","addListener","setMapStyle","loadImage","createLegendControl","createCenterMapControl","createResizeMapControl","createDragMapControl","createAddMarkerControl","createRemoveMarkerControl","setTimeout","async","getStyle","StyledMapType","name","mapTypes","set","setMapTypeId","getAttribute","GlGoogleImageFactory","create","marker","mapMarker","Marker","type","status","color","isSelected","path","icon","fillColor","fillOpacity","strokeWeight","strokeColor","anchor","Point","animation","Animation","DROP","draggable","isAdmin","onMarkerMouseover","onMarkerMouseout","onMarkerDragend","onMarkerClick","eventType","glMarker","event","customEvent","CustomEvent","detail","pixel","domEvent","latLng","dispatchEvent","forEach","m","setIcon","panToSelectedMarker","notifySubscribers","onMarkerDrag","onMarkerDragstart","clearTimeout","state","recenterButton","document","createElement","title","className","innerHTML","addEventListener","controls","push","resizeButton","style","display","dragButton","addMarkerButton","removeMarkerButton","legend","TOP_RIGHT","imageBounds","bounds","getBounds","newMapCenter","getCenter","contains","newLat","Math","max","getSouthWest","min","getNorthEast","newLng","panTo","LatLng","RESIZING","DRAGGING","ADDING_MARKER","REMOVING_MARKER","closeDetail","getPixelCoordinate","getProjection","fromLatLngToDivPixel","setAdminMode","setDraggable","offsetX","offsetY","projection","pixelPosition","getPosition","newPixelPosition","x","y","fromDivPixelToLatLng","e","newMarker","POSITIONING_MARKER","switchModes","ADMIN","removeEventListener","mode","clearListeners","switchStates","setVisible","classList","remove","setOpacity","CONFIRMING","pingLoadState","add","component","fullyLoaded","progress","subscribe","callback","data","newMode","Object","values","includes","console","error","newState","newMap"],"mappings":"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"}