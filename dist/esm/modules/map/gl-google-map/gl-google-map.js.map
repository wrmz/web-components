{"version":3,"file":"gl-google-map.js","sources":["../../../../../src/modules/map/gl-google-map/gl-google-map.js"],"sourcesContent":["/*global google*/\n/**\n * @injectHTML\n */\nexport class GlGoogleMap extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'key',\n        ];\n    }\n\n    constructor() {\n        super();\n        this.errors = [];\n        this.utilTimeout = undefined;\n        this.key = '';\n        this.id = crypto.randomUUID ? crypto.randomUUID().split('-').pop() : (Math.random() * 1000);\n        this.apiLoadedCBName = `gl_cb_${this.id}`;\n        this.map = undefined;\n        this.elem = this.shadowRoot.querySelector('.map');\n        this.elem.setAttribute('id', `map_${this.id}`);\n    }\n\n    handleApiLoaded() {\n        this.map = new google.maps.Map(this.elem, {\n            center: { lat: -34.397, lng: 150.644 },\n            zoom: 8\n        });\n    }\n\n    loadGoogleMapsApi() {\n        const endpoint = 'https://maps.googleapis.com/maps/api/js';\n        const script = document.createElement('script');\n        script.id = `map_script_${this.id}`;\n        script.type = 'text/javascript';\n        script.src = `${endpoint}?key=${this.key}&callback=${this.apiLoadedCBName}&v=weekly`;\n        script.defer = true;\n        script.async = true;\n        window[this.apiLoadedCBName] = this.handleApiLoaded.bind(this);\n        document.head.appendChild(script);\n    }\n\n    /**\n     * Fires when the component is connected to the DOM\n     */\n    connectedCallback() {\n\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} name\n     * @param {String} oldValue\n     * @param {String} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'key' && newValue) {\n            this.key = newValue;\n            this.removeAttribute('key');\n            this.loadGoogleMapsApi();\n        }\n    }\n}\n\nif (!window.customElements.get('gl-google-map')) {\n    window.customElements.define('gl-google-map', GlGoogleMap);\n}\n"],"names":["GlGoogleMap","HTMLElement","observedAttributes","constructor","super","this","attachShadow","mode","innerHTML","errors","utilTimeout","undefined","key","id","crypto","randomUUID","split","pop","Math","random","apiLoadedCBName","map","elem","shadowRoot","querySelector","setAttribute","handleApiLoaded","google","maps","Map","center","lat","lng","zoom","loadGoogleMapsApi","script","document","createElement","type","src","defer","async","window","bind","head","appendChild","connectedCallback","attributeChangedCallback","name","oldValue","newValue","removeAttribute","customElements","get","define"],"mappings":"AAIO,MAAMA,oBAAoBC,YAClBC,gCACP,MAAO,CACH,MAEP,CAEDC,cACIC,QAAQC,KAAKC,aAAa,CAACC,KAAK,SAASC,UAAU,4KACnDH,KAAKI,OAAS,GACdJ,KAAKK,iBAAcC,EACnBN,KAAKO,IAAM,GACXP,KAAKQ,GAAKC,OAAOC,WAAaD,OAAOC,aAAaC,MAAM,KAAKC,MAAyB,IAAhBC,KAAKC,SAC3Ed,KAAKe,gBAAkB,SAASf,KAAKQ,KACrCR,KAAKgB,SAAMV,EACXN,KAAKiB,KAAOjB,KAAKkB,WAAWC,cAAc,QAC1CnB,KAAKiB,KAAKG,aAAa,KAAM,OAAOpB,KAAKQ,KAC5C,CAEDa,kBACIrB,KAAKgB,IAAM,IAAIM,OAAOC,KAAKC,IAAIxB,KAAKiB,KAAM,CACtCQ,OAAQ,CAAEC,KAAM,OAAQC,IAAK,SAC7BC,KAAM,GAEb,CAEDC,oBACI,MACMC,EAASC,SAASC,cAAc,UACtCF,EAAOtB,GAAK,cAAcR,KAAKQ,KAC/BsB,EAAOG,KAAO,kBACdH,EAAOI,IAAM,+CAAmBlC,KAAKO,gBAAgBP,KAAKe,2BAC1De,EAAOK,OAAQ,EACfL,EAAOM,OAAQ,EACfC,OAAOrC,KAAKe,iBAAmBf,KAAKqB,gBAAgBiB,KAAKtC,MACzD+B,SAASQ,KAAKC,YAAYV,EAC7B,CAKDW,oBAEC,CAQDC,yBAAyBC,EAAMC,EAAUC,GACxB,QAATF,GAAkBE,IAClB7C,KAAKO,IAAMsC,EACX7C,KAAK8C,gBAAgB,OACrB9C,KAAK6B,oBAEZ,EAGAQ,OAAOU,eAAeC,IAAI,kBAC3BX,OAAOU,eAAeE,OAAO,gBAAiBtD"}