{"version":3,"file":"gl-google-map.js","sources":["../../../../../src/modules/map/gl-google-map/gl-google-map.js"],"sourcesContent":["/*global google*/\n/**\n * @injectHTML\n */\nexport class GlGoogleMap extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'key',\n        ];\n    }\n\n    constructor() {\n        super();\n        this.key = '';\n        this._id = crypto.randomUUID ? crypto.randomUUID().split('-').pop() : Math.round(Math.random() * 9999);\n        this.apiLoadedCBName = `gl_cb_${this._id}`;\n        this.map = undefined;\n        this.elem = this.shadowRoot.querySelector('.map');\n        this.elem.setAttribute('id', `map_${this._id}`);\n    }\n\n    handleApiLoaded() {\n        console.log('map loaded');\n        this.map = new google.maps.Map(this.elem, {\n            center: { lat: -34.397, lng: 150.644 },\n            zoom: 8\n        });\n    }\n\n    loadGoogleMapsApi() {\n        console.log('loading api');\n        const endpoint = 'https://maps.googleapis.com/maps/api/js';\n        const script = document.createElement('script');\n        script.id = `map_script_${this._id}`;\n        script.type = 'text/javascript';\n        script.src = `${endpoint}?key=${this.key}&callback=${this.apiLoadedCBName}&v=weekly`;\n        script.defer = true;\n        script.async = true;\n        window[this.apiLoadedCBName] = this.handleApiLoaded.bind(this);\n        document.head.appendChild(script);\n    }\n\n    /**\n     * Fires when the component is connected to the DOM\n     */\n    connectedCallback() {\n        console.log('connected');\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} name\n     * @param {String} oldValue\n     * @param {String} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'key' && newValue) {\n            this.key = newValue;\n            this.removeAttribute('key');\n            this.loadGoogleMapsApi();\n        }\n    }\n}\n\nif (!window.customElements.get('gl-google-map')) {\n    window.customElements.define('gl-google-map', GlGoogleMap);\n}\n"],"names":["GlGoogleMap","HTMLElement","observedAttributes","constructor","super","this","attachShadow","mode","template","document","createElement","innerHTML","shadowRoot","appendChild","content","cloneNode","key","_id","crypto","randomUUID","split","pop","Math","round","random","apiLoadedCBName","map","undefined","elem","querySelector","setAttribute","handleApiLoaded","console","log","google","maps","Map","center","lat","lng","zoom","loadGoogleMapsApi","script","id","type","src","defer","async","window","bind","head","connectedCallback","attributeChangedCallback","name","oldValue","newValue","removeAttribute","customElements","get","define"],"mappings":"AAIO,MAAMA,oBAAoBC,YAClBC,gCACP,MAAO,CACH,MAEP,CAEDC,cACIC,QAAQC,KAAKC,aAAa,CAACC,KAAK,SAAS,MAAMC,EAAWC,SAASC,cAAc,YAAYF,EAASG,UAAY,4KAA4KN,KAAKO,WAAWC,YAAYL,EAASM,QAAQC,WAAU,IACrVV,KAAKW,IAAM,GACXX,KAAKY,IAAMC,OAAOC,WAAaD,OAAOC,aAAaC,MAAM,KAAKC,MAAQC,KAAKC,MAAsB,KAAhBD,KAAKE,UACtFnB,KAAKoB,gBAAkB,SAASpB,KAAKY,MACrCZ,KAAKqB,SAAMC,EACXtB,KAAKuB,KAAOvB,KAAKO,WAAWiB,cAAc,QAC1CxB,KAAKuB,KAAKE,aAAa,KAAM,OAAOzB,KAAKY,MAC5C,CAEDc,kBACIC,QAAQC,IAAI,cACZ5B,KAAKqB,IAAM,IAAIQ,OAAOC,KAAKC,IAAI/B,KAAKuB,KAAM,CACtCS,OAAQ,CAAEC,KAAM,OAAQC,IAAK,SAC7BC,KAAM,GAEb,CAEDC,oBACIT,QAAQC,IAAI,eACZ,MACMS,EAASjC,SAASC,cAAc,UACtCgC,EAAOC,GAAK,cAActC,KAAKY,MAC/ByB,EAAOE,KAAO,kBACdF,EAAOG,IAAM,+CAAmBxC,KAAKW,gBAAgBX,KAAKoB,2BAC1DiB,EAAOI,OAAQ,EACfJ,EAAOK,OAAQ,EACfC,OAAO3C,KAAKoB,iBAAmBpB,KAAK0B,gBAAgBkB,KAAK5C,MACzDI,SAASyC,KAAKrC,YAAY6B,EAC7B,CAKDS,oBACInB,QAAQC,IAAI,YACf,CAQDmB,yBAAyBC,EAAMC,EAAUC,GACxB,QAATF,GAAkBE,IAClBlD,KAAKW,IAAMuC,EACXlD,KAAKmD,gBAAgB,OACrBnD,KAAKoC,oBAEZ,EAGAO,OAAOS,eAAeC,IAAI,kBAC3BV,OAAOS,eAAeE,OAAO,gBAAiB3D"}