{"version":3,"file":"mortgage-calc-input.js","sources":["../../../../../src/modules/form/mortgage-calc-input/mortgage-calc-input.js"],"sourcesContent":["import { FieldInput } from '../field-input/field-input';\n\nexport class MortgageCalcInput extends FieldInput {\n    static sanitize(v) { return (v + '').trim().replace(/[^0-9.]*/g, ''); }\n\n    get type() { return this.getAttribute('type') || 'currency'; }\n    get stylizedFormat() {\n        return new Intl.NumberFormat('en-US', {\n            minimumFractionDigits: this.type === 'percentage' ? 1 : 0,\n            maximumFractionDigits: 2\n        }).format;\n    }\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n    get numeric() {\n        const sanitized = MortgageCalcInput.sanitize(this.value);\n        const numeric = isNaN(sanitized) ? 0 : sanitized;\n        return Number.isInteger(numeric) ? parseInt(numeric, 10) : parseFloat(numeric);\n    }\n    get stylized() {\n        const sanitized = this.numeric;\n        return this.stylizedFormat(sanitized);\n    }\n    get currency() {\n        const sanitized = this.numeric;\n        return this.currencyFormat(sanitized);\n    }\n\n    handleKeyup(e) {\n        const val = e.target.value;\n        this.value = val === '.' ? val.replace('.', '0.') : val;\n        if (this.type === 'currency') {\n            e.target.value = this.currency;\n        } else if (this.type === 'percentage') {\n            e.target.value = this.numeric;\n        }\n    }\n\n    attributeChangedCallback(attr) {\n        this.handleChanged();\n        if (attr === 'value') {\n            if (this.type === 'currency') {\n                this._value = this.currency;\n            } else if (this.type === 'percentage') {\n                this._value = this.numeric;\n            }\n        }\n    }\n}\n\nif (!window.customElements.get('mortgage-calc-input')) {\n    window.customElements.define('mortgage-calc-input', MortgageCalcInput);\n}\n"],"names":["MortgageCalcInput","FieldInput","static","v","trim","replace","type","this","getAttribute","stylizedFormat","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","currencyFormat","style","currency","numeric","sanitized","sanitize","value","isNaN","Number","isInteger","parseInt","parseFloat","stylized","handleKeyup","e","val","target","attributeChangedCallback","attr","handleChanged","_value","window","customElements","get","define"],"mappings":"2DAEO,MAAMA,0BAA0BC,EACnCC,gBAAgBC,GAAK,OAAQA,EAAI,IAAIC,OAAOC,QAAQ,YAAa,IAE7DC,WAAS,OAAOC,KAAKC,aAAa,SAAW,WAC7CC,qBACA,OAAO,IAAIC,KAAKC,aAAa,QAAS,CAClCC,sBAAqC,eAAdL,KAAKD,KAAwB,EAAI,EACxDO,sBAAuB,IACxBC,OAEHC,qBACA,OAAO,IAAIL,KAAKC,aAAa,QAAS,CAClCK,MAAO,WACPC,SAAU,MACVL,sBAAuB,EACvBC,sBAAuB,IACxBC,OAEHI,cACA,MAAMC,EAAYnB,kBAAkBoB,SAASb,KAAKc,OAC5CH,EAAUI,MAAMH,GAAa,EAAIA,EACvC,OAAOI,OAAOC,UAAUN,GAAWO,SAASP,EAAS,IAAMQ,WAAWR,GAEtES,eACA,MAAMR,EAAYZ,KAAKW,QACvB,OAAOX,KAAKE,eAAeU,GAE3BF,eACA,MAAME,EAAYZ,KAAKW,QACvB,OAAOX,KAAKQ,eAAeI,GAG/BS,YAAYC,GACR,MAAMC,EAAMD,EAAEE,OAAOV,MACrBd,KAAKc,MAAgB,MAARS,EAAcA,EAAIzB,QAAQ,IAAK,MAAQyB,EAClC,aAAdvB,KAAKD,KACLuB,EAAEE,OAAOV,MAAQd,KAAKU,SACD,eAAdV,KAAKD,OACZuB,EAAEE,OAAOV,MAAQd,KAAKW,SAI9Bc,yBAAyBC,GACrB1B,KAAK2B,gBACQ,UAATD,IACkB,aAAd1B,KAAKD,KACLC,KAAK4B,OAAS5B,KAAKU,SACE,eAAdV,KAAKD,OACZC,KAAK4B,OAAS5B,KAAKW,WAM9BkB,OAAOC,eAAeC,IAAI,wBAC3BF,OAAOC,eAAeE,OAAO,sBAAuBvC"}