{"version":3,"file":"web-components.js","sources":["../src/modules/icon/chevron-icon/chevron-icon.js","../src/modules/common/register-components.js","../src/modules/form/info-message/info-message.js","../src/modules/form/common/FormElement.js","../src/modules/form/field-input/field-input.js","../src/modules/form/radio-group/radio-group.js","../src/modules/chart/donut/chart-donut.js","../src/modules/map/gl-google-map/gl-google-map.js","../src/modules/form/mortgage-calc-input/mortgage-calc-input.js","../src/modules/form/mortgage-calc/mortgage-calc.js"],"sourcesContent":["/**\n * @injectHTML\n */\nexport class ChevronIcon extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    static get observedAttributes() { return ['title']; }\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        this.shadowRoot.querySelector('svg title').textContent = newVal;\n    }\n}\n\nif (!window.customElements.get('chevron-icon')) {\n    window.customElements.define('chevron-icon', ChevronIcon);\n}\n","export function registerComponents (...args) {\n    args ? '' : console.error('Please register your components');\n}\n","import { registerComponents } from '../../common/register-components';\nimport { ChevronIcon } from '../../icon/chevron-icon/chevron-icon';\n\n/**\n * @injectHTML\n */\nexport class InfoMessage extends HTMLElement {\n    constructor() {\n        super();\n        registerComponents(ChevronIcon);\n        this.shadowRoot.querySelector('slot').addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    handleSlotChange(e) {\n        e.target.assignedElements({ flatten: true }).length > 0 ? this.setAttribute('shown', '') : this.removeAttribute('shown');\n    }\n}\n\nif (!window.customElements.get('info-message')) {\n    window.customElements.define('info-message', InfoMessage);\n}\n","export class FormElement extends HTMLElement {\n    static get observedAttributes() {\n        return ['invalid', 'value'];\n    }\n\n    constructor() {\n        super();\n        this.input = null;\n        this.radios = null;\n        this.handleFormElementInvalid = this.handleFormElementInvalid.bind(this);\n        this.handleFormElementInput = this.handleFormElementInput.bind(this);\n    }\n\n    get valid() { return !this.hasAttribute('invalid') && !this.hasAttribute('aria-invalid'); }\n    set valid(v) {\n        if (v) {\n            this.removeAttribute('invalid');\n            this.removeAttribute('aria-invalid');\n        } else {\n            this.setAttribute('invalid', '');\n            this.setAttribute('aria-invalid', '');\n        }\n    }\n\n    registerElementForValidation(element) {\n        element.addEventListener('invalid', this.handleFormElementInvalid, false);\n        element.addEventListener('input', this.handleFormElementInput, false);\n    }\n\n    handleFormElementInvalid(e) {\n        this.valid = false;\n        this.toggleInvalidAttribute(e.target);\n    }\n\n    handleFormElementInput(e) {\n        const element = e.target;\n        this.valid = element.checkValidity();\n        this.toggleInvalidAttribute(element);\n    }\n\n    toggleInvalidAttribute(element) {\n        const errorMsg = this.shadowRoot.querySelector('info-message[role=\"alert\"]');\n        if (errorMsg) {\n            element.validity.valid ? errorMsg.removeAttribute('invalid') : errorMsg.setAttribute('invalid', '');\n        }\n\n    }\n\n    handleChanged() {\n        const errorMsg = this.shadowRoot.querySelector('info-message[role=\"alert\"]');\n        if (errorMsg) {\n            this.hasAttribute('invalid') ? errorMsg.setAttribute('invalid', '') : errorMsg.removeAttribute('invalid');\n        }\n    }\n\n    attributeChangedCallback() {\n        this.handleChanged();\n    }\n}\n","import { FormElement } from '../common/FormElement';\n\n/**\n * @injectHTML\n */\nexport class FieldInput extends FormElement {\n\n    constructor() {\n        super();\n        this.input = null;\n        this.handleInput = this.handleInput.bind(this);\n        this.handleKeyup = this.handleKeyup.bind(this);\n        this.handleSlotChange = this.handleSlotChange.bind(this);\n        this.shadowInput = this.shadowRoot.querySelector('slot[name=\"input\"]');\n        this.shadowInput.addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    get value() { return this.getAttribute('value') || ''; }\n    set value(v) { this.setAttribute('value', v); }\n\n    handleSlotChange(e) {\n        this.input = [...e.target.assignedElements()].find(el => el.tagName === 'INPUT');\n        if (this.input) {\n            this.registerElementForValidation(this.input);\n            this.input.value = this._value || this.getAttribute('value') || '';\n            this.input.addEventListener('input', this.handleInput, false);\n            this.input.addEventListener('keyup', this.handleKeyup, false);\n        }\n    }\n\n    handleInput(e) {\n        this.value = e.target.value;\n    }\n\n    handleKeyup() { }\n\n    disconnectedCallback() {\n        this.input.removeEventListener('input', this.handleInput);\n        this.input.removeEventListener('keyup', this.handleKeyup);\n        this.shadowInput.removeEventListener('slotchange', this.handleSlotChange);\n    }\n}\n\nif (!window.customElements.get('field-input')) {\n    window.customElements.define('field-input', FieldInput);\n}\n","import { registerComponents } from '../../common/register-components.js';\nimport { FormElement } from '../common/FormElement.js';\nimport { InfoMessage } from '../info-message/info-message.js';\n\n/**\n * @injectHTML\n */\nexport class RadioGroup extends FormElement {\n    static sanitize(v) { return (v + '').trim().replace(/[^0-9.]*/g, ''); }\n\n    constructor() {\n        super();\n        registerComponents(InfoMessage);\n        this.radios = null;\n        this.handleSlotChange = this.handleSlotChange.bind(this);\n        this.shadowRadios = this.shadowRoot.querySelector('.radio-group__options slot');\n        this.shadowRadios.addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    get value() { return this.getAttribute('value') || ''; }\n    set value(v) { this.setAttribute('value', v); }\n\n    get numeric() {\n        const sanitized = RadioGroup.sanitize(this.value);\n        return isNaN(sanitized) ? 0 : sanitized;\n    }\n\n    get selectedRadio() {\n        return this.radios && this.value\n            ? this.radios.find(el => el.checked)\n            : null;\n    }\n    set selectedRadio(v) {\n        if (v && this.radios) {\n            const radio = this.radios.find(el => el.value === v);\n            if (radio) {\n                radio.checked = true;\n            }\n        }\n    }\n\n    handleSlotChange(e) {\n        this.radios = [...e.target.assignedElements()]\n            .flatMap(el => ([el, ...el.children]))\n            .filter(el => el.tagName === 'INPUT');\n\n        if (this.value) {\n            this.selectedRadio = this.value;\n        }\n\n        this.addEventListener('input', this.handleInput, false);\n    }\n\n    handleInput(e) {\n        this.value = e.target.value;\n    }\n\n    attributeChangedCallback(attr, oldVal, newVal) {\n        this.handleChanged();\n        if (attr === 'value') {\n            this._value = newVal;\n        }\n    }\n\n    detachedCallback() {\n        this.removeEventListener('input', this.handleInput);\n    }\n}\n\nif (!window.customElements.get('radio-group')) {\n    window.customElements.define('radio-group', RadioGroup);\n}\n","// import { registerComponents  } from '../../common/register-components';\n\n/**\n * @injectHTML\n */\nexport class ChartDonut extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'colors',\n            'values',\n            'labels',\n        ];\n    }\n\n    static degreesToRadians(angle) {\n        return angle * (Math.PI / 180);\n    }\n\n    constructor() {\n        super();\n        this.gap = 2;\n        this.cx = 80;\n        this.cy = 80;\n        this.radius = 60;\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.segmentElems = [];\n        this.isLoaded = false;\n\n        this.svg = this.shadowRoot.querySelector('svg');\n        this.generateSegment = this.generateSegment.bind(this);\n        this.updateSegment = this.updateSegment.bind(this);\n    }\n\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n\n    set colors(v) {\n        this.setAttribute('colors', JSON.stringify(v));\n    }\n\n    get colors() {\n        const colors = (this.getAttribute('colors') || '').replace(/'/g, '\"');\n        return colors ? JSON.parse(colors) : ['red', 'green', 'blue'];\n    }\n\n    set labels(v) {\n        this.setAttribute('labels', JSON.stringify(v));\n    }\n\n    get labels() {\n        const labels = (this.getAttribute('labels') || '').replace(/'/g, '\"');\n        return labels ? JSON.parse(labels) : [];\n    }\n\n    set values(v) {\n        this.setAttribute('values', JSON.stringify(v));\n    }\n\n    get values() {\n        const values = (this.getAttribute('values') || '').replace(/'/g, '\"');\n        return values ? JSON.parse(values) : [];\n    }\n\n    get total() {\n        return this.values.length\n            ? this.values.reduce((previous, current) => previous + current)\n            : 0;\n    }\n\n    get circumference() {\n        return 2 * Math.PI * this.radius;\n    }\n\n    get adjustedCircumference() {\n        return this.circumference - this.gap;\n    }\n\n    /**\n     * Loops through the values and generates a segment for each\n     */\n    generateSegments() {\n        this.values.forEach(this.generateSegment);\n    }\n\n    /**\n     * Generates an individual segment\n     * @param {number} val - The amount this segmenet represents\n     * @param {number} i - Index of this value in `this.values`\n     */\n    generateSegment(val, i) {\n        const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        circle.setAttribute('tabindex', '0');\n        circle.setAttribute('cx', this.cx);\n        circle.setAttribute('cy', this.cy);\n        circle.setAttribute('r', this.radius);\n        circle.setAttribute('fill', 'transparent');\n        circle.setAttribute('stroke', this.colors[i]);\n        circle.setAttribute('stroke-width', 30);\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n        circle.appendChild(title);\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n\n        this.segmentElems.push(circle);\n        this.svg.appendChild(circle);\n    }\n\n    updateSegments() {\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.values.forEach(this.updateSegment);\n    }\n\n    updateSegment(val, i) {\n        const circle = this.segmentElems[i];\n        const title = circle.querySelector('title');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n    }\n\n    calculateStrokeDashOffset(val) {\n        const strokeDiff = this.dataPercentage(val) * this.circumference;\n        return this.circumference - strokeDiff;\n    }\n\n    /**\n     * Calculates the transform rotation the circle should be\n     * attributed with\n     * @param {Number} i - The index of chart data to use\n     * @returns {String} - The rotation of the circle\n     */\n    calculateTransform(i) {\n        return `rotate(${this.chartData[i].degrees}, ${this.cx}, ${this.cy})`;\n    }\n\n    /**\n     * Gets the percentage a given value represents of the total\n     * @param {Number} val - The divisor\n     * @returns {Number} - The percentage\n     */\n    dataPercentage(val) {\n        return (this.total && val) ? val / this.total : 0;\n    }\n\n    /**\n     * Destroys the segments of the circle by removing the elements,\n     * removing them from the `segmentElems` array and removing their\n     * data from the `segmentElems` array.\n     */\n    destroySegments() {\n        while (this.svg.firstChild) {\n            this.svg.removeChild(this.svg.firstChild);\n            this.segmentElems.shift();\n            this.chartData.shift();\n        }\n        this.angleOffset = -90;\n    }\n\n    connectedCallback() {\n        this.generateSegments();\n        this.isLoaded = true;\n    }\n\n    /**\n     * @param {string} attr - The attribute which changed\n     * @param {string} oldVal - The old value\n     * @param {string} newVal - The new value\n     */\n    attributeChangedCallback() {\n        if (this.isLoaded && this.colors && this.values && this.total) {\n            this.updateSegments();\n        }\n    }\n}\n\nif (!window.customElements.get('chart-donut')) {\n    window.customElements.define('chart-donut', ChartDonut);\n}\n","/*global google*/\n/**\n * @injectHTML\n */\nexport class GlGoogleMap extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'key',\n        ];\n    }\n\n    constructor() {\n        super();\n        this.key = '';\n        this._id = crypto.randomUUID ? crypto.randomUUID().split('-').pop() : Math.round(Math.random() * 9999);\n        this.apiLoadedCBName = `gl_cb_${this._id}`;\n        this.map = undefined;\n        this.elem = this.shadowRoot.querySelector('.map');\n        this.elem.setAttribute('id', `map_${this._id}`);\n    }\n\n    handleApiLoaded() {\n        console.log('map loaded');\n        this.map = new google.maps.Map(this.elem, {\n            center: { lat: -34.397, lng: 150.644 },\n            zoom: 8\n        });\n    }\n\n    loadGoogleMapsApi() {\n        console.log('loading api');\n        const endpoint = 'https://maps.googleapis.com/maps/api/js';\n        const script = document.createElement('script');\n        script.id = `map_script_${this._id}`;\n        script.type = 'text/javascript';\n        script.src = `${endpoint}?key=${this.key}&callback=${this.apiLoadedCBName}&v=weekly`;\n        script.defer = true;\n        script.async = true;\n        window[this.apiLoadedCBName] = this.handleApiLoaded.bind(this);\n        document.head.appendChild(script);\n    }\n\n    /**\n     * Fires when the component is connected to the DOM\n     */\n    connectedCallback() {\n        console.log('connected');\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} name\n     * @param {String} oldValue\n     * @param {String} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'key' && newValue) {\n            this.key = newValue;\n            this.removeAttribute('key');\n            this.loadGoogleMapsApi();\n        }\n    }\n}\n\nif (!window.customElements.get('gl-google-map')) {\n    window.customElements.define('gl-google-map', GlGoogleMap);\n}\n","import { FieldInput } from '../field-input/field-input';\n\nexport class MortgageCalcInput extends FieldInput {\n    static sanitize(v) { return (v + '').trim().replace(/[^0-9.]*/g, ''); }\n\n    get type() { return this.getAttribute('type') || 'currency'; }\n    get name() { return this.getAttribute('name') || ''; }\n    get stylizedFormat() {\n        return new Intl.NumberFormat('en-US', {\n            minimumFractionDigits: this.type === 'percentage' ? 1 : 0,\n            maximumFractionDigits: 3\n        }).format;\n    }\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n    get numeric() {\n        const sanitized = MortgageCalcInput.sanitize(this.value);\n        const numeric = (!sanitized || isNaN(sanitized)) ? 0 : sanitized;\n        return Number.isInteger(numeric) ? parseInt(numeric, 10) : parseFloat(numeric);\n    }\n    get stylized() {\n        const stylized = this.stylizedFormat(this.numeric);\n        return this.type === 'percentage' ? stylized + '%' : stylized;\n    }\n    get currency() {\n        const sanitized = this.numeric;\n        return this.currencyFormat(sanitized);\n    }\n\n    handleKeyup(e) {\n        const val = e.target.value;\n        this.value = val === '.' ? val.replace('.', '0.') : val;\n        if (this.type === 'currency') {\n            e.target.value = this.currency;\n        } else if (this.type === 'percentage') {\n            e.target.value = this.stylized;\n        }\n    }\n\n    attributeChangedCallback(attr) {\n        this.handleChanged();\n        if (attr === 'value') {\n            if (this.type === 'currency') {\n                this._value = this.currency;\n            } else if (this.type === 'percentage') {\n                this._value = this.stylized;\n            }\n        }\n    }\n}\n\nif (!window.customElements.get('mortgage-calc-input')) {\n    window.customElements.define('mortgage-calc-input', MortgageCalcInput);\n}\n","import { registerComponents } from '../../common/register-components.js';\nimport { MortgageCalcInput } from '../mortgage-calc-input/mortgage-calc-input.js';\nimport { RadioGroup } from '../radio-group/radio-group.js';\nimport { ChartDonut } from '../../chart/donut/chart-donut.js';\n\n/**\n * @injectHTML\n */\nexport class MortgageCalc extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'price',\n            'downpayment',\n            'interest',\n            'taxes',\n            'term',\n            'pmi',\n            'hoa',\n            'monthly-payment',\n            'colors',\n        ];\n    }\n\n    constructor() {\n        super();\n\n        registerComponents(MortgageCalcInput, RadioGroup, ChartDonut);\n\n        this.chartElement = undefined;\n\n        this.elements = {\n            price: this.shadowRoot.querySelector('mortgage-calc-input[name=\"price\"]'),\n            downpayment: this.shadowRoot.querySelector('mortgage-calc-input[name=\"downpayment\"]'),\n            interest: this.shadowRoot.querySelector('mortgage-calc-input[name=\"interest\"]'),\n            taxes: this.shadowRoot.querySelector('mortgage-calc-input[name=\"taxes\"]'),\n            term: this.shadowRoot.querySelector('radio-group[name=\"term\"]'),\n            hoa: this.shadowRoot.querySelector('mortgage-calc-input[name=\"hoa\"]'),\n        };\n\n        this.output = {\n            principal: this.shadowRoot.querySelector('#outputPrincipal'), // will include interest\n            taxes: this.shadowRoot.querySelector('#outputTaxes'),\n            fees: this.shadowRoot.querySelector('#outputFees'),\n            perMonth: this.shadowRoot.querySelector('#outputPerMonth'),\n        };\n\n        this.addEventListener('input', this.handleInput, false);\n    }\n\n    get colors() {\n        let colors = this.getAttribute('colors') || '';\n        colors = colors.replace(/'/g, '\"');\n        return colors ? JSON.parse(colors) : [];\n    }\n\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n\n    get price() { return this.elements ? this.elements.price.numeric : 0; }\n    set price(v) { this.elements.price.value = v; }\n\n    get downpayment() { return this.elements ? this.elements.downpayment.numeric : 0; }\n    set downpayment(v) { this.elements.downpayment.value = v; }\n\n    get interest() { return this.elements ? this.elements.interest.numeric : 0; }\n    set interest(v) { this.elements.interest.value = v; }\n\n    get taxes() { return this.elements ? this.elements.taxes.numeric : 0; }\n    set taxes(v) { this.elements.taxes.value = v;}\n\n    get hoa() { return this.elements ? this.elements.hoa.numeric : 0; }\n    set hoa(v) { this.elements.hoa.value = v; }\n\n    get term() { return this.elements ? this.elements.term.numeric : 0; }\n    set term(v) { this.elements.term.value = v; }\n\n    get pmi() { return this.getAttribute('pmi') || ''; }\n\n    get insurance() { return this.getAttribute('insurance') || ''; }\n\n    /**\n     * The mortgage principal is the initial loan amount.\n     * It's the price minus the downpayment you make.\n     * If a home is $500,000 and you put down $100,000,\n     * you'll need to borrow $400,000 from the bank.\n     */\n    get mortgagePrincipal() { return this.price - this.downpayment; }\n\n    /**\n     * The interest rate percentage is divided by 12 (months in a year)\n     * to find the monthly interest rate.\n     * If the annual interest rate is 4%, the monthly interest rate is 0.33%\n     * or 0.0033.\n     */\n    get monthlyInterestRate() { return this.interest / 100 / 12; }\n\n\n    /**\n     * For a fixed-rate mortgage, the term is often 30 or 15 years.\n     * The number of payments is the number of years multiplied by\n     * 12 (months in a year). 30 years would be 360 monthly payments.\n     */\n    get numberOfPayments() { return this.term * 12; }\n\n\n    /**\n     * Monthly principal and interest is calculated against the loan principal\n     * and considers the monthly interest rate and total months in the loan term chosen\n     * @returns {Number}\n     */\n    get monthlyPrincipalAndInterest() {\n        const isCalculable = this.mortgagePrincipal && this.monthlyInterestRate;\n        return isCalculable\n            ? (this.mortgagePrincipal / ((1 - Math.pow(1 + this.monthlyInterestRate, -this.numberOfPayments)) / this.monthlyInterestRate))\n            : 0;\n    }\n\n\n    /**\n     * The monthly mortgage principal divided by the total number\n     * of payments\n     * @returns {Number}\n     */\n    get monthlyMortgagePrincipal() {\n        const monthlyMortgagePrincipal = this.monthlyPrincipalAndInterest - this.monthlyInterestCost;\n        return monthlyMortgagePrincipal;\n    }\n\n    /**\n     * The interest cost is the mortgage principal multiplied by the monthly interest rate\n     * @returns {Number}\n     */\n    get monthlyInterestCost() {\n        const interestCost = this.mortgagePrincipal * this.monthlyInterestRate;\n        return interestCost;\n    }\n\n    /**\n     * Private mortgage insurance (PMI) is required if you put\n     * down less than 20% of the purchase price with a conventional mortgage.\n     * It's typically between 0.2% and 2% of the mortgage principal.\n     */\n    get pmiCost() {\n        const lessThanTwentyPercent = (this.downpayment / this.price) < 0.2;\n        return lessThanTwentyPercent\n            ? ((this.pmi / 100) * this.mortgagePrincipal) / 12\n            : 0;\n    }\n\n    /**\n     * Property tax is a percentage of the price\n     * split into 12 month payments\n     */\n    get taxesCost() {\n        return ((this.taxes / 100) * this.price) / 12;\n    }\n\n    /**\n     * Home insurance is a percentage of the price\n     * split into 12 month payments\n     * @returns {Number}\n     */\n    get insuranceCost() {\n        const insuranceCost = ((this.insurance / 100) * this.price) / 12;\n        return insuranceCost;\n    }\n\n    get feesCost() {\n        const feesCost = this.hoa;\n        return feesCost;\n    }\n\n    /**\n     * Monthly payment adds all the monthly costs up into a single sum\n     * @returns {Number}\n     */\n    get monthlyPayment() {\n        const monthlyPayment = this.monthlyPrincipalAndInterest + this.taxesCost + this.insuranceCost + this.pmiCost + this.feesCost;\n        return monthlyPayment;\n    }\n\n    generateChart() {\n        const chartContainer = this.shadowRoot.querySelector('.mortgage-calc__chart');\n        this.chartElement = document.createElement('chart-donut');\n        this.chartElement.colors = this.colors;\n        this.chartElement.labels = ['Principal + Interest', 'Taxes', 'Fees'];\n        this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n\n        chartContainer.append(this.chartElement);\n    }\n\n    /**\n     * Handles input events for the mortgage calc form\n     */\n    handleInput() {\n        this.output.principal.textContent = this.currencyFormat(this.monthlyPrincipalAndInterest);\n        this.output.taxes.textContent = this.currencyFormat(this.taxesCost);\n        this.output.fees.textContent = this.currencyFormat(this.feesCost);\n        this.output.perMonth.textContent = this.currencyFormat(this.monthlyPayment);\n        if (this.chartElement) {\n            this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n        }\n    }\n\n    connectedCallback() {\n        this.generateChart();\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} attr - The attribute that changed\n     * @param {*} oldVal - The old value\n     * @param {*} newVal - The new value\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        // Update attributes\n        if (attr === 'price') {\n            this.price = newVal;\n        } else if (attr === 'downpayment') {\n            this.downpayment = newVal;\n        } else if (attr === 'interest') {\n            this.interest = newVal;\n        } else if (attr === 'taxes') {\n            this.taxes = newVal;\n        } else if (attr === 'term') {\n            this.term = newVal;\n        } else if (attr === 'hoa') {\n            this.hoa = newVal;\n        }\n\n        // Update the outputs\n        this.output.principal.textContent = this.currencyFormat(this.monthlyMortgagePrincipal + this.monthlyInterestCost);\n        this.output.taxes.textContent = this.currencyFormat(this.taxesCost);\n        this.output.fees.textContent = this.currencyFormat(this.feesCost);\n        this.output.perMonth.textContent = this.currencyFormat(this.monthlyPayment);\n        if (this.chartElement) {\n            this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n        }\n    }\n}\n\n// Define the component\nif (!window.customElements.get('mortgage-calc')) {\n    window.customElements.define('mortgage-calc', MortgageCalc);\n}\n"],"names":["ChevronIcon","HTMLElement","constructor","super","this","attachShadow","mode","template","document","createElement","innerHTML","shadowRoot","appendChild","content","cloneNode","observedAttributes","attributeChangedCallback","attrName","oldVal","newVal","querySelector","textContent","registerComponents","args","console","error","window","customElements","get","define","InfoMessage","addEventListener","handleSlotChange","e","target","assignedElements","flatten","length","setAttribute","removeAttribute","FormElement","input","radios","handleFormElementInvalid","bind","handleFormElementInput","valid","hasAttribute","v","registerElementForValidation","element","toggleInvalidAttribute","checkValidity","errorMsg","validity","handleChanged","FieldInput","handleInput","handleKeyup","shadowInput","value","getAttribute","find","el","tagName","_value","disconnectedCallback","removeEventListener","RadioGroup","static","trim","replace","shadowRadios","numeric","sanitized","sanitize","isNaN","selectedRadio","checked","radio","flatMap","children","filter","attr","detachedCallback","ChartDonut","angle","Math","PI","gap","cx","cy","radius","angleOffset","chartData","segmentElems","isLoaded","svg","generateSegment","updateSegment","currencyFormat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","colors","JSON","stringify","parse","labels","values","total","reduce","previous","current","circumference","adjustedCircumference","generateSegments","forEach","val","i","circle","createElementNS","title","data","degrees","dataPercentage","push","calculateStrokeDashOffset","calculateTransform","updateSegments","strokeDiff","destroySegments","firstChild","removeChild","shift","connectedCallback","GlGoogleMap","key","_id","crypto","randomUUID","split","pop","round","random","apiLoadedCBName","map","undefined","elem","handleApiLoaded","log","google","maps","Map","center","lat","lng","zoom","loadGoogleMapsApi","script","id","type","src","defer","async","head","name","oldValue","newValue","MortgageCalcInput","stylizedFormat","Number","isInteger","parseInt","parseFloat","stylized","MortgageCalc","chartElement","elements","price","downpayment","interest","taxes","term","hoa","output","principal","fees","perMonth","pmi","insurance","mortgagePrincipal","monthlyInterestRate","numberOfPayments","monthlyPrincipalAndInterest","pow","monthlyMortgagePrincipal","monthlyInterestCost","pmiCost","taxesCost","insuranceCost","feesCost","monthlyPayment","generateChart","chartContainer","append"],"mappings":"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"}