{"version":3,"file":"web-components.js","sources":["../src/modules/icon/chevron-icon/chevron-icon.js","../src/modules/common/register-components.js","../src/modules/form/info-message/info-message.js","../src/modules/form/common/FormElement.js","../src/modules/form/field-input/field-input.js","../src/modules/form/radio-group/radio-group.js","../src/modules/chart/donut/chart-donut.js","../src/modules/map/gl-google-map/gl-google-map.js","../src/modules/form/mortgage-calc-input/mortgage-calc-input.js","../src/modules/form/mortgage-calc/mortgage-calc.js"],"sourcesContent":["/**\n * @injectHTML\n */\nexport class ChevronIcon extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    static get observedAttributes() { return ['title']; }\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        this.shadowRoot.querySelector('svg title').textContent = newVal;\n    }\n}\n\nif (!window.customElements.get('chevron-icon')) {\n    window.customElements.define('chevron-icon', ChevronIcon);\n}\n","export function registerComponents (...args) {\n    args ? '' : console.error('Please register your components');\n}\n","import { registerComponents } from '../../common/register-components';\nimport { ChevronIcon } from '../../icon/chevron-icon/chevron-icon';\n\n/**\n * @injectHTML\n */\nexport class InfoMessage extends HTMLElement {\n    constructor() {\n        super();\n        registerComponents(ChevronIcon);\n        this.shadowRoot.querySelector('slot').addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    handleSlotChange(e) {\n        e.target.assignedElements({ flatten: true }).length > 0 ? this.setAttribute('shown', '') : this.removeAttribute('shown');\n    }\n}\n\nif (!window.customElements.get('info-message')) {\n    window.customElements.define('info-message', InfoMessage);\n}\n","export class FormElement extends HTMLElement {\n    static get observedAttributes() {\n        return ['invalid', 'value'];\n    }\n\n    constructor() {\n        super();\n        this.input = null;\n        this.radios = null;\n        this.handleFormElementInvalid = this.handleFormElementInvalid.bind(this);\n        this.handleFormElementInput = this.handleFormElementInput.bind(this);\n    }\n\n    get valid() { return !this.hasAttribute('invalid') && !this.hasAttribute('aria-invalid'); }\n    set valid(v) {\n        if (v) {\n            this.removeAttribute('invalid');\n            this.removeAttribute('aria-invalid');\n        } else {\n            this.setAttribute('invalid', '');\n            this.setAttribute('aria-invalid', '');\n        }\n    }\n\n    registerElementForValidation(element) {\n        element.addEventListener('invalid', this.handleFormElementInvalid, false);\n        element.addEventListener('input', this.handleFormElementInput, false);\n    }\n\n    handleFormElementInvalid(e) {\n        this.valid = false;\n        this.toggleInvalidAttribute(e.target);\n    }\n\n    handleFormElementInput(e) {\n        const element = e.target;\n        this.valid = element.checkValidity();\n        this.toggleInvalidAttribute(element);\n    }\n\n    toggleInvalidAttribute(element) {\n        const errorMsg = this.shadowRoot.querySelector('info-message[role=\"alert\"]');\n        if (errorMsg) {\n            element.validity.valid ? errorMsg.removeAttribute('invalid') : errorMsg.setAttribute('invalid', '');\n        }\n\n    }\n\n    handleChanged() {\n        const errorMsg = this.shadowRoot.querySelector('info-message[role=\"alert\"]');\n        if (errorMsg) {\n            this.hasAttribute('invalid') ? errorMsg.setAttribute('invalid', '') : errorMsg.removeAttribute('invalid');\n        }\n    }\n\n    attributeChangedCallback() {\n        this.handleChanged();\n    }\n}\n","import { FormElement } from '../common/FormElement';\n\n/**\n * @injectHTML\n */\nexport class FieldInput extends FormElement {\n\n    constructor() {\n        super();\n        this.input = null;\n        this.handleInput = this.handleInput.bind(this);\n        this.handleKeyup = this.handleKeyup.bind(this);\n        this.handleSlotChange = this.handleSlotChange.bind(this);\n        this.shadowInput = this.shadowRoot.querySelector('slot[name=\"input\"]');\n        this.shadowInput.addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    get value() { return this.getAttribute('value') || ''; }\n    set value(v) { this.setAttribute('value', v); }\n\n    handleSlotChange(e) {\n        this.input = [...e.target.assignedElements()].find(el => el.tagName === 'INPUT');\n        if (this.input) {\n            this.registerElementForValidation(this.input);\n            this.input.value = this._value || this.getAttribute('value') || '';\n            this.input.addEventListener('input', this.handleInput, false);\n            this.input.addEventListener('keyup', this.handleKeyup, false);\n        }\n    }\n\n    handleInput(e) {\n        this.value = e.target.value;\n    }\n\n    handleKeyup() { }\n\n    disconnectedCallback() {\n        this.input.removeEventListener('input', this.handleInput);\n        this.input.removeEventListener('keyup', this.handleKeyup);\n        this.shadowInput.removeEventListener('slotchange', this.handleSlotChange);\n    }\n}\n\nif (!window.customElements.get('field-input')) {\n    window.customElements.define('field-input', FieldInput);\n}\n","import { registerComponents } from '../../common/register-components.js';\nimport { FormElement } from '../common/FormElement.js';\nimport { InfoMessage } from '../info-message/info-message.js';\n\n/**\n * @injectHTML\n */\nexport class RadioGroup extends FormElement {\n    static sanitize(v) { return (v + '').trim().replace(/[^0-9.]*/g, ''); }\n\n    constructor() {\n        super();\n        registerComponents(InfoMessage);\n        this.radios = null;\n        this.handleSlotChange = this.handleSlotChange.bind(this);\n        this.shadowRadios = this.shadowRoot.querySelector('.radio-group__options slot');\n        this.shadowRadios.addEventListener('slotchange', this.handleSlotChange, false);\n    }\n\n    get value() { return this.getAttribute('value') || ''; }\n    set value(v) { this.setAttribute('value', v); }\n\n    get numeric() {\n        const sanitized = RadioGroup.sanitize(this.value);\n        return isNaN(sanitized) ? 0 : sanitized;\n    }\n\n    get selectedRadio() {\n        return this.radios && this.value\n            ? this.radios.find(el => el.checked)\n            : null;\n    }\n    set selectedRadio(v) {\n        if (v && this.radios) {\n            const radio = this.radios.find(el => el.value === v);\n            if (radio) {\n                radio.checked = true;\n            }\n        }\n    }\n\n    handleSlotChange(e) {\n        this.radios = [...e.target.assignedElements()]\n            .flatMap(el => ([el, ...el.children]))\n            .filter(el => el.tagName === 'INPUT');\n\n        if (this.value) {\n            this.selectedRadio = this.value;\n        }\n\n        this.addEventListener('input', this.handleInput, false);\n    }\n\n    handleInput(e) {\n        this.value = e.target.value;\n    }\n\n    attributeChangedCallback(attr, oldVal, newVal) {\n        this.handleChanged();\n        if (attr === 'value') {\n            this._value = newVal;\n        }\n    }\n\n    detachedCallback() {\n        this.removeEventListener('input', this.handleInput);\n    }\n}\n\nif (!window.customElements.get('radio-group')) {\n    window.customElements.define('radio-group', RadioGroup);\n}\n","// import { registerComponents  } from '../../common/register-components';\n\n/**\n * @injectHTML\n */\nexport class ChartDonut extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'colors',\n            'values',\n            'labels',\n        ];\n    }\n\n    static degreesToRadians(angle) {\n        return angle * (Math.PI / 180);\n    }\n\n    constructor() {\n        super();\n        this.gap = 2;\n        this.cx = 80;\n        this.cy = 80;\n        this.radius = 60;\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.segmentElems = [];\n        this.isLoaded = false;\n\n        this.svg = this.shadowRoot.querySelector('svg');\n        this.generateSegment = this.generateSegment.bind(this);\n        this.updateSegment = this.updateSegment.bind(this);\n    }\n\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n\n    set colors(v) {\n        this.setAttribute('colors', JSON.stringify(v));\n    }\n\n    get colors() {\n        const colors = (this.getAttribute('colors') || '').replace(/'/g, '\"');\n        return colors ? JSON.parse(colors) : ['red', 'green', 'blue'];\n    }\n\n    set labels(v) {\n        this.setAttribute('labels', JSON.stringify(v));\n    }\n\n    get labels() {\n        const labels = (this.getAttribute('labels') || '').replace(/'/g, '\"');\n        return labels ? JSON.parse(labels) : [];\n    }\n\n    set values(v) {\n        this.setAttribute('values', JSON.stringify(v));\n    }\n\n    get values() {\n        const values = (this.getAttribute('values') || '').replace(/'/g, '\"');\n        return values ? JSON.parse(values) : [];\n    }\n\n    get total() {\n        return this.values.length\n            ? this.values.reduce((previous, current) => previous + current)\n            : 0;\n    }\n\n    get circumference() {\n        return 2 * Math.PI * this.radius;\n    }\n\n    get adjustedCircumference() {\n        return this.circumference - this.gap;\n    }\n\n    /**\n     * Loops through the values and generates a segment for each\n     */\n    generateSegments() {\n        this.values.forEach(this.generateSegment);\n    }\n\n    /**\n     * Generates an individual segment\n     * @param {number} val - The amount this segmenet represents\n     * @param {number} i - Index of this value in `this.values`\n     */\n    generateSegment(val, i) {\n        const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        circle.setAttribute('tabindex', '0');\n        circle.setAttribute('cx', this.cx);\n        circle.setAttribute('cy', this.cy);\n        circle.setAttribute('r', this.radius);\n        circle.setAttribute('fill', 'transparent');\n        circle.setAttribute('stroke', this.colors[i]);\n        circle.setAttribute('stroke-width', 30);\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n        circle.appendChild(title);\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n\n        this.segmentElems.push(circle);\n        this.svg.appendChild(circle);\n    }\n\n    updateSegments() {\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.values.forEach(this.updateSegment);\n    }\n\n    updateSegment(val, i) {\n        const circle = this.segmentElems[i];\n        const title = circle.querySelector('title');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n    }\n\n    calculateStrokeDashOffset(val) {\n        const strokeDiff = this.dataPercentage(val) * this.circumference;\n        return this.circumference - strokeDiff;\n    }\n\n    /**\n     * Calculates the transform rotation the circle should be\n     * attributed with\n     * @param {Number} i - The index of chart data to use\n     * @returns {String} - The rotation of the circle\n     */\n    calculateTransform(i) {\n        return `rotate(${this.chartData[i].degrees}, ${this.cx}, ${this.cy})`;\n    }\n\n    /**\n     * Gets the percentage a given value represents of the total\n     * @param {Number} val - The divisor\n     * @returns {Number} - The percentage\n     */\n    dataPercentage(val) {\n        return (this.total && val) ? val / this.total : 0;\n    }\n\n    /**\n     * Destroys the segments of the circle by removing the elements,\n     * removing them from the `segmentElems` array and removing their\n     * data from the `segmentElems` array.\n     */\n    destroySegments() {\n        while (this.svg.firstChild) {\n            this.svg.removeChild(this.svg.firstChild);\n            this.segmentElems.shift();\n            this.chartData.shift();\n        }\n        this.angleOffset = -90;\n    }\n\n    connectedCallback() {\n        this.generateSegments();\n        this.isLoaded = true;\n    }\n\n    /**\n     * @param {string} attr - The attribute which changed\n     * @param {string} oldVal - The old value\n     * @param {string} newVal - The new value\n     */\n    attributeChangedCallback() {\n        if (this.isLoaded && this.colors && this.values && this.total) {\n            this.updateSegments();\n        }\n    }\n}\n\nif (!window.customElements.get('chart-donut')) {\n    window.customElements.define('chart-donut', ChartDonut);\n}\n","/*global google*/\n/**\n * @injectHTML\n */\nexport class GlGoogleMap extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'key',\n        ];\n    }\n\n    constructor() {\n        super();\n        this.errors = [];\n        this.utilTimeout = undefined;\n        this.key = '';\n        this.id = crypto.randomUUID ? crypto.randomUUID().split('-').pop() : Math.round(Math.random() * 9999);\n        this.apiLoadedCBName = `gl_cb_${this.id}`;\n        this.map = undefined;\n        this.elem = this.shadowRoot.querySelector('.map');\n        this.elem.setAttribute('id', `map_${this.id}`);\n    }\n\n    handleApiLoaded() {\n        console.log('map loaded');\n        this.map = new google.maps.Map(this.elem, {\n            center: { lat: -34.397, lng: 150.644 },\n            zoom: 8\n        });\n    }\n\n    loadGoogleMapsApi() {\n        console.log('loading api');\n        const endpoint = 'https://maps.googleapis.com/maps/api/js';\n        const script = document.createElement('script');\n        script.id = `map_script_${this.id}`;\n        script.type = 'text/javascript';\n        script.src = `${endpoint}?key=${this.key}&callback=${this.apiLoadedCBName}&v=weekly`;\n        script.defer = true;\n        script.async = true;\n        window[this.apiLoadedCBName] = this.handleApiLoaded.bind(this);\n        document.head.appendChild(script);\n    }\n\n    /**\n     * Fires when the component is connected to the DOM\n     */\n    connectedCallback() {\n        console.log('connected');\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} name\n     * @param {String} oldValue\n     * @param {String} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'key' && newValue) {\n            this.key = newValue;\n            this.removeAttribute('key');\n            this.loadGoogleMapsApi();\n        }\n    }\n}\n\nif (!window.customElements.get('gl-google-map')) {\n    window.customElements.define('gl-google-map', GlGoogleMap);\n}\n","import { FieldInput } from '../field-input/field-input';\n\nexport class MortgageCalcInput extends FieldInput {\n    static sanitize(v) { return (v + '').trim().replace(/[^0-9.]*/g, ''); }\n\n    get type() { return this.getAttribute('type') || 'currency'; }\n    get name() { return this.getAttribute('name') || ''; }\n    get stylizedFormat() {\n        return new Intl.NumberFormat('en-US', {\n            minimumFractionDigits: this.type === 'percentage' ? 1 : 0,\n            maximumFractionDigits: 3\n        }).format;\n    }\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n    get numeric() {\n        const sanitized = MortgageCalcInput.sanitize(this.value);\n        const numeric = (!sanitized || isNaN(sanitized)) ? 0 : sanitized;\n        return Number.isInteger(numeric) ? parseInt(numeric, 10) : parseFloat(numeric);\n    }\n    get stylized() {\n        const stylized = this.stylizedFormat(this.numeric);\n        return this.type === 'percentage' ? stylized + '%' : stylized;\n    }\n    get currency() {\n        const sanitized = this.numeric;\n        return this.currencyFormat(sanitized);\n    }\n\n    handleKeyup(e) {\n        const val = e.target.value;\n        this.value = val === '.' ? val.replace('.', '0.') : val;\n        if (this.type === 'currency') {\n            e.target.value = this.currency;\n        } else if (this.type === 'percentage') {\n            e.target.value = this.stylized;\n        }\n    }\n\n    attributeChangedCallback(attr) {\n        this.handleChanged();\n        if (attr === 'value') {\n            if (this.type === 'currency') {\n                this._value = this.currency;\n            } else if (this.type === 'percentage') {\n                this._value = this.stylized;\n            }\n        }\n    }\n}\n\nif (!window.customElements.get('mortgage-calc-input')) {\n    window.customElements.define('mortgage-calc-input', MortgageCalcInput);\n}\n","import { registerComponents } from '../../common/register-components.js';\nimport { MortgageCalcInput } from '../mortgage-calc-input/mortgage-calc-input.js';\nimport { RadioGroup } from '../radio-group/radio-group.js';\nimport { ChartDonut } from '../../chart/donut/chart-donut.js';\n\n/**\n * @injectHTML\n */\nexport class MortgageCalc extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'price',\n            'downpayment',\n            'interest',\n            'taxes',\n            'term',\n            'pmi',\n            'hoa',\n            'monthly-payment',\n            'colors',\n        ];\n    }\n\n    constructor() {\n        super();\n\n        registerComponents(MortgageCalcInput, RadioGroup, ChartDonut);\n\n        this.chartElement = undefined;\n\n        this.elements = {\n            price: this.shadowRoot.querySelector('mortgage-calc-input[name=\"price\"]'),\n            downpayment: this.shadowRoot.querySelector('mortgage-calc-input[name=\"downpayment\"]'),\n            interest: this.shadowRoot.querySelector('mortgage-calc-input[name=\"interest\"]'),\n            taxes: this.shadowRoot.querySelector('mortgage-calc-input[name=\"taxes\"]'),\n            term: this.shadowRoot.querySelector('radio-group[name=\"term\"]'),\n            hoa: this.shadowRoot.querySelector('mortgage-calc-input[name=\"hoa\"]'),\n        };\n\n        this.output = {\n            principal: this.shadowRoot.querySelector('#outputPrincipal'), // will include interest\n            taxes: this.shadowRoot.querySelector('#outputTaxes'),\n            fees: this.shadowRoot.querySelector('#outputFees'),\n            perMonth: this.shadowRoot.querySelector('#outputPerMonth'),\n        };\n\n        this.addEventListener('input', this.handleInput, false);\n    }\n\n    get colors() {\n        let colors = this.getAttribute('colors') || '';\n        colors = colors.replace(/'/g, '\"');\n        return colors ? JSON.parse(colors) : [];\n    }\n\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n\n    get price() { return this.elements ? this.elements.price.numeric : 0; }\n    set price(v) { this.elements.price.value = v; }\n\n    get downpayment() { return this.elements ? this.elements.downpayment.numeric : 0; }\n    set downpayment(v) { this.elements.downpayment.value = v; }\n\n    get interest() { return this.elements ? this.elements.interest.numeric : 0; }\n    set interest(v) { this.elements.interest.value = v; }\n\n    get taxes() { return this.elements ? this.elements.taxes.numeric : 0; }\n    set taxes(v) { this.elements.taxes.value = v;}\n\n    get hoa() { return this.elements ? this.elements.hoa.numeric : 0; }\n    set hoa(v) { this.elements.hoa.value = v; }\n\n    get term() { return this.elements ? this.elements.term.numeric : 0; }\n    set term(v) { this.elements.term.value = v; }\n\n    get pmi() { return this.getAttribute('pmi') || ''; }\n\n    get insurance() { return this.getAttribute('insurance') || ''; }\n\n    /**\n     * The mortgage principal is the initial loan amount.\n     * It's the price minus the downpayment you make.\n     * If a home is $500,000 and you put down $100,000,\n     * you'll need to borrow $400,000 from the bank.\n     */\n    get mortgagePrincipal() { return this.price - this.downpayment; }\n\n    /**\n     * The interest rate percentage is divided by 12 (months in a year)\n     * to find the monthly interest rate.\n     * If the annual interest rate is 4%, the monthly interest rate is 0.33%\n     * or 0.0033.\n     */\n    get monthlyInterestRate() { return this.interest / 100 / 12; }\n\n\n    /**\n     * For a fixed-rate mortgage, the term is often 30 or 15 years.\n     * The number of payments is the number of years multiplied by\n     * 12 (months in a year). 30 years would be 360 monthly payments.\n     */\n    get numberOfPayments() { return this.term * 12; }\n\n\n    /**\n     * Monthly principal and interest is calculated against the loan principal\n     * and considers the monthly interest rate and total months in the loan term chosen\n     * @returns {Number}\n     */\n    get monthlyPrincipalAndInterest() {\n        const isCalculable = this.mortgagePrincipal && this.monthlyInterestRate;\n        return isCalculable\n            ? (this.mortgagePrincipal / ((1 - Math.pow(1 + this.monthlyInterestRate, -this.numberOfPayments)) / this.monthlyInterestRate))\n            : 0;\n    }\n\n\n    /**\n     * The monthly mortgage principal divided by the total number\n     * of payments\n     * @returns {Number}\n     */\n    get monthlyMortgagePrincipal() {\n        const monthlyMortgagePrincipal = this.monthlyPrincipalAndInterest - this.monthlyInterestCost;\n        return monthlyMortgagePrincipal;\n    }\n\n    /**\n     * The interest cost is the mortgage principal multiplied by the monthly interest rate\n     * @returns {Number}\n     */\n    get monthlyInterestCost() {\n        const interestCost = this.mortgagePrincipal * this.monthlyInterestRate;\n        return interestCost;\n    }\n\n    /**\n     * Private mortgage insurance (PMI) is required if you put\n     * down less than 20% of the purchase price with a conventional mortgage.\n     * It's typically between 0.2% and 2% of the mortgage principal.\n     */\n    get pmiCost() {\n        const lessThanTwentyPercent = (this.downpayment / this.price) < 0.2;\n        return lessThanTwentyPercent\n            ? ((this.pmi / 100) * this.mortgagePrincipal) / 12\n            : 0;\n    }\n\n    /**\n     * Property tax is a percentage of the price\n     * split into 12 month payments\n     */\n    get taxesCost() {\n        return ((this.taxes / 100) * this.price) / 12;\n    }\n\n    /**\n     * Home insurance is a percentage of the price\n     * split into 12 month payments\n     * @returns {Number}\n     */\n    get insuranceCost() {\n        const insuranceCost = ((this.insurance / 100) * this.price) / 12;\n        return insuranceCost;\n    }\n\n    get feesCost() {\n        const feesCost = this.hoa;\n        return feesCost;\n    }\n\n    /**\n     * Monthly payment adds all the monthly costs up into a single sum\n     * @returns {Number}\n     */\n    get monthlyPayment() {\n        const monthlyPayment = this.monthlyPrincipalAndInterest + this.taxesCost + this.insuranceCost + this.pmiCost + this.feesCost;\n        return monthlyPayment;\n    }\n\n    generateChart() {\n        const chartContainer = this.shadowRoot.querySelector('.mortgage-calc__chart');\n        this.chartElement = document.createElement('chart-donut');\n        this.chartElement.colors = this.colors;\n        this.chartElement.labels = ['Principal + Interest', 'Taxes', 'Fees'];\n        this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n\n        chartContainer.append(this.chartElement);\n    }\n\n    /**\n     * Handles input events for the mortgage calc form\n     */\n    handleInput() {\n        this.output.principal.textContent = this.currencyFormat(this.monthlyPrincipalAndInterest);\n        this.output.taxes.textContent = this.currencyFormat(this.taxesCost);\n        this.output.fees.textContent = this.currencyFormat(this.feesCost);\n        this.output.perMonth.textContent = this.currencyFormat(this.monthlyPayment);\n        if (this.chartElement) {\n            this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n        }\n    }\n\n    connectedCallback() {\n        this.generateChart();\n    }\n\n    /**\n     * Handles changes to the component attributes\n     * @param {String} attr - The attribute that changed\n     * @param {*} oldVal - The old value\n     * @param {*} newVal - The new value\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        // Update attributes\n        if (attr === 'price') {\n            this.price = newVal;\n        } else if (attr === 'downpayment') {\n            this.downpayment = newVal;\n        } else if (attr === 'interest') {\n            this.interest = newVal;\n        } else if (attr === 'taxes') {\n            this.taxes = newVal;\n        } else if (attr === 'term') {\n            this.term = newVal;\n        } else if (attr === 'hoa') {\n            this.hoa = newVal;\n        }\n\n        // Update the outputs\n        this.output.principal.textContent = this.currencyFormat(this.monthlyMortgagePrincipal + this.monthlyInterestCost);\n        this.output.taxes.textContent = this.currencyFormat(this.taxesCost);\n        this.output.fees.textContent = this.currencyFormat(this.feesCost);\n        this.output.perMonth.textContent = this.currencyFormat(this.monthlyPayment);\n        if (this.chartElement) {\n            this.chartElement.values = [this.monthlyPrincipalAndInterest, this.taxesCost, this.feesCost];\n        }\n    }\n}\n\n// Define the component\nif (!window.customElements.get('mortgage-calc')) {\n    window.customElements.define('mortgage-calc', MortgageCalc);\n}\n"],"names":["ChevronIcon","HTMLElement","constructor","super","this","attachShadow","mode","innerHTML","observedAttributes","attributeChangedCallback","attrName","oldVal","newVal","shadowRoot","querySelector","textContent","registerComponents","args","console","error","window","customElements","get","define","InfoMessage","addEventListener","handleSlotChange","e","target","assignedElements","flatten","length","setAttribute","removeAttribute","FormElement","input","radios","handleFormElementInvalid","bind","handleFormElementInput","valid","hasAttribute","v","registerElementForValidation","element","toggleInvalidAttribute","checkValidity","errorMsg","validity","handleChanged","FieldInput","handleInput","handleKeyup","shadowInput","value","getAttribute","find","el","tagName","_value","disconnectedCallback","removeEventListener","RadioGroup","static","trim","replace","shadowRadios","numeric","sanitized","sanitize","isNaN","selectedRadio","checked","radio","flatMap","children","filter","attr","detachedCallback","ChartDonut","angle","Math","PI","gap","cx","cy","radius","angleOffset","chartData","segmentElems","isLoaded","svg","generateSegment","updateSegment","currencyFormat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","colors","JSON","stringify","parse","labels","values","total","reduce","previous","current","circumference","adjustedCircumference","generateSegments","forEach","val","i","circle","document","createElementNS","title","data","degrees","dataPercentage","push","calculateStrokeDashOffset","calculateTransform","appendChild","updateSegments","strokeDiff","destroySegments","firstChild","removeChild","shift","connectedCallback","GlGoogleMap","errors","utilTimeout","undefined","key","id","crypto","randomUUID","split","pop","round","random","apiLoadedCBName","map","elem","handleApiLoaded","log","google","maps","Map","center","lat","lng","zoom","loadGoogleMapsApi","script","createElement","type","src","defer","async","head","name","oldValue","newValue","MortgageCalcInput","stylizedFormat","Number","isInteger","parseInt","parseFloat","stylized","MortgageCalc","chartElement","elements","price","downpayment","interest","taxes","term","hoa","output","principal","fees","perMonth","pmi","insurance","mortgagePrincipal","monthlyInterestRate","numberOfPayments","monthlyPrincipalAndInterest","pow","monthlyMortgagePrincipal","monthlyInterestCost","pmiCost","taxesCost","insuranceCost","feesCost","monthlyPayment","generateChart","chartContainer","append"],"mappings":"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"}