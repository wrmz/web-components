{"version":3,"file":"chart-donut.js","sources":["../../../../../../src/modules/chart/donut/chart-donut.js"],"sourcesContent":["// import { registerComponents  } from '../../common/register-components';\n\n/**\n * @injectHTML\n */\nexport class ChartDonut extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'colors',\n            'values',\n        ];\n    }\n\n    static degreesToRadians(angle) {\n        return angle * (Math.PI / 180);\n    }\n\n    constructor() {\n        super();\n        this.gap = 2;\n        this.cx = 80;\n        this.cy = 80;\n        this.radius = 60;\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.segmentElems = [];\n\n        this.svg = this.shadowRoot.querySelector('svg');\n        this.generateSegment = this.generateSegment.bind(this);\n    }\n\n    set colors(v) {\n        this.setAttribute('colors', JSON.stringify(v));\n    }\n\n    get colors() {\n        let colors = this.getAttribute('colors');\n\n        // Replace single quotes with double-quotes\n        colors = colors.replace(/'/g, '\"');\n\n        return colors ? JSON.parse(colors) : [];\n    }\n\n    set values(v) {\n        this.setAttribute('values', JSON.stringify(v));\n    }\n\n    get values() {\n        let values = this.getAttribute('values') || '';\n\n        values = values.replace(/'/g, '\"');\n\n        // console.log(values);\n\n        return values ? JSON.parse(values) : [];\n    }\n\n    get total() {\n        return this.values.length\n            ? this.values.reduce((previous, current) => previous + current)\n            : 0;\n    }\n\n    get circumference() {\n        return 2 * Math.PI * this.radius;\n    }\n\n    get adjustedCircumference() {\n        return this.circumference - this.gap;\n    }\n\n    generateSegments() {\n\n        this.values.forEach(this.generateSegment);\n        console.log(this.segmentElems);\n    }\n\n    generateSegment(val, i) {\n        // console.log(val, i);\n        const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        console.log('degrees:', this.angleOffset);\n\n        // console.log('calculated offset:', this.values[i], this.dataPercentage(this.values[i]) * 360)\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        // console.log(this.values[i], this.dataPercentage(this.values[i]),  this.angleOffset);\n\n        circle.setAttribute('cx', this.cx);\n        circle.setAttribute('cy', this.cy);\n        circle.setAttribute('r', this.radius);\n        circle.setAttribute('fill', 'transparent');\n        circle.setAttribute('stroke', this.colors[i]);\n        circle.setAttribute('stroke-width', 30);\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n\n\n        this.segmentElems.push(circle);\n        this.svg.appendChild(circle);\n\n    }\n\n    // updateSegment(segment) {\n\n    // }\n\n    calculateStrokeDashOffset(val) {\n        const strokeDiff = this.dataPercentage(val) * this.circumference;\n        return this.circumference - strokeDiff;\n    }\n\n    calculateTransform(i) {\n        return `rotate(${this.chartData[i].degrees}, ${this.cx}, ${this.cy})`;\n    }\n\n    dataPercentage(val) {\n        return this.total ? val / this.total : 0;\n    }\n\n    /**\n     * @todo - Rather than destroying segments, we should update the segments that already exist\n     * @param {string} attr - The attribute which changed\n     * @param {string} oldVal - The old value\n     * @param {string} newVal - The new value\n     */\n    attributeChangedCallback() {\n        if (this.colors && this.values && this.total) {\n            this.destroySegments();\n            this.generateSegments();\n        }\n    }\n\n    destroySegments() {\n        while (this.svg.firstChild) {\n            this.svg.removeChild(this.svg.firstChild);\n            this.segmentElems.shift();\n            this.chartData.shift();\n        }\n        this.angleOffset = -90;\n    }\n}\n\nif (!window.customElements.get('chart-donut')) {\n    window.customElements.define('chart-donut', ChartDonut);\n}\n"],"names":[],"mappings":"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"}