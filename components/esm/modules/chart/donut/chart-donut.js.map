{"version":3,"file":"chart-donut.js","sources":["../../../../../../src/modules/chart/donut/chart-donut.js"],"sourcesContent":["// import { registerComponents  } from '../../common/register-components';\n\n/**\n * @injectHTML\n */\nexport class ChartDonut extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'colors',\n            'values',\n            'labels',\n        ];\n    }\n\n    static degreesToRadians(angle) {\n        return angle * (Math.PI / 180);\n    }\n\n    constructor() {\n        super();\n        this.gap = 2;\n        this.cx = 80;\n        this.cy = 80;\n        this.radius = 60;\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.segmentElems = [];\n        this.isLoaded = false;\n\n        this.svg = this.shadowRoot.querySelector('svg');\n        this.generateSegment = this.generateSegment.bind(this);\n        this.updateSegment = this.updateSegment.bind(this);\n    }\n\n    get currencyFormat() {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format;\n    }\n\n    set colors(v) {\n        this.setAttribute('colors', JSON.stringify(v));\n    }\n\n    get colors() {\n        const colors = (this.getAttribute('colors') || '').replace(/'/g, '\"');\n        return colors ? JSON.parse(colors) : ['red', 'green', 'blue'];\n    }\n\n    set labels(v) {\n        this.setAttribute('labels', JSON.stringify(v));\n    }\n\n    get labels() {\n        const labels = (this.getAttribute('labels') || '').replace(/'/g, '\"');\n        return labels ? JSON.parse(labels) : [];\n    }\n\n    set values(v) {\n        this.setAttribute('values', JSON.stringify(v));\n    }\n\n    get values() {\n        const values = (this.getAttribute('values') || '').replace(/'/g, '\"');\n        return values ? JSON.parse(values) : [];\n    }\n\n    get total() {\n        return this.values.length\n            ? this.values.reduce((previous, current) => previous + current)\n            : 0;\n    }\n\n    get circumference() {\n        return 2 * Math.PI * this.radius;\n    }\n\n    get adjustedCircumference() {\n        return this.circumference - this.gap;\n    }\n\n    /**\n     * Loops through the values and generates a segment for each\n     */\n    generateSegments() {\n        this.values.forEach(this.generateSegment);\n    }\n\n    /**\n     * Generates an individual segment\n     * @param {number} val - The amount this segmenet represents\n     * @param {number} i - Index of this value in `this.values`\n     */\n    generateSegment(val, i) {\n        const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        circle.setAttribute('tabindex', '0');\n        circle.setAttribute('cx', this.cx);\n        circle.setAttribute('cy', this.cy);\n        circle.setAttribute('r', this.radius);\n        circle.setAttribute('fill', 'transparent');\n        circle.setAttribute('stroke', this.colors[i]);\n        circle.setAttribute('stroke-width', 30);\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n        circle.appendChild(title);\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n\n        this.segmentElems.push(circle);\n        this.svg.appendChild(circle);\n    }\n\n    updateSegments() {\n        this.angleOffset = -90;\n        this.chartData = [];\n        this.values.forEach(this.updateSegment);\n    }\n\n    updateSegment(val, i) {\n        const circle = this.segmentElems[i];\n        const title = circle.querySelector('title');\n        console.log(title);\n        const data = {\n            degrees: this.angleOffset,\n        };\n\n        this.angleOffset += this.dataPercentage(this.values[i]) * 360;\n        this.chartData.push(data);\n\n        title.textContent = `${this.labels[i]}: ${this.currencyFormat(val)}`;\n        circle.setAttribute('stroke-dasharray', this.adjustedCircumference);\n        circle.setAttribute('stroke-dashoffset', this.calculateStrokeDashOffset(this.values[i]));\n        circle.setAttribute('transform', this.calculateTransform(i));\n    }\n\n    calculateStrokeDashOffset(val) {\n        const strokeDiff = this.dataPercentage(val) * this.circumference;\n        return this.circumference - strokeDiff;\n    }\n\n    /**\n     * Calculates the transform rotation the circle should be\n     * attributed with\n     * @param {Number} i - The index of chart data to use\n     * @returns {String} - The rotation of the circle\n     */\n    calculateTransform(i) {\n        return `rotate(${this.chartData[i].degrees}, ${this.cx}, ${this.cy})`;\n    }\n\n    /**\n     * Gets the percentage a given value represents of the total\n     * @param {Number} val - The divisor\n     * @returns {Number} - The percentage\n     */\n    dataPercentage(val) {\n        return this.total ? val / this.total : 0;\n    }\n\n    /**\n     * Destroys the segments of the circle by removing the elements,\n     * removing them from the `segmentElems` array and removing their\n     * data from the `segmentElems` array.\n     */\n    destroySegments() {\n        while (this.svg.firstChild) {\n            this.svg.removeChild(this.svg.firstChild);\n            this.segmentElems.shift();\n            this.chartData.shift();\n        }\n        this.angleOffset = -90;\n    }\n\n    connectedCallback() {\n        this.generateSegments();\n        this.isLoaded = true;\n    }\n\n    /**\n     * @param {string} attr - The attribute which changed\n     * @param {string} oldVal - The old value\n     * @param {string} newVal - The new value\n     */\n    attributeChangedCallback() {\n        if (this.isLoaded && this.colors && this.values && this.total) {\n            this.updateSegments();\n        }\n    }\n}\n\nif (!window.customElements.get('chart-donut')) {\n    window.customElements.define('chart-donut', ChartDonut);\n}\n"],"names":[],"mappings":"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"}