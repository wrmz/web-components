{"version":3,"file":"mortgage-calc.js","sources":["../../../../../../src/modules/form/mortgage-calc/mortgage-calc.js"],"sourcesContent":["import { registerComponents } from '../../common/register-components.js';\nimport { MortgageCalcInput } from '../mortgage-calc-input/mortgage-calc-input.js';\nimport { RadioGroup } from '../radio-group/radio-group.js';\n\n/**\n * @injectHTML\n */\nexport class MortgageCalc extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'price',\n            'downpayment',\n            'interest',\n            'taxes',\n            'term',\n            'pmi',\n            'monthly-payment'\n        ];\n    }\n\n    constructor() {\n        super();\n\n        registerComponents(MortgageCalcInput, RadioGroup);\n\n        this.elements = {\n            price: this.shadowRoot.querySelector('mortgage-calc-input[name=\"price\"]'),\n            downpayment: this.shadowRoot.querySelector('mortgage-calc-input[name=\"downpayment\"]'),\n            interest: this.shadowRoot.querySelector('mortgage-calc-input[name=\"interest\"]'),\n            taxes: this.shadowRoot.querySelector('mortgage-calc-input[name=\"taxes\"]'),\n            term: this.shadowRoot.querySelector('radio-group[name=\"term\"]'),\n            // pmi: { floated: FieldInput.floatedFormat(this.getAttribute('pmi')) || 0.5 },\n            // insurance: { floated: FieldInput.floatedFormat(this.getAttribute('insurance')) || 0.35 }\n        };\n\n        this.output = {\n            principal: this.shadowRoot.querySelector('#outputPrincipal'), // will include interest\n            taxes: this.shadowRoot.querySelector('#outputTaxes'),\n            perMonth: this.shadowRoot.querySelector('#outputPerMonth'),\n        };\n\n        // this.addEventListener('input', this.handleInput, false);\n    }\n\n    get price() { return this.elements.price.numeric; }\n    set price(v) { this.elements.price.value = v; }\n\n    get downpayment() { return this.elements.downpayment.numeric; }\n    set downpayment(v) { this.elements.downpayment.value = v; }\n\n    get interest() { return this.elements.interest.numeric; }\n    set interest(v) { this.elements.interest.value = v; }\n\n    get taxes() { return this.elements.taxes.numeric; }\n    set taxes(v) { this.elements.taxes.value = v;}\n\n    get term() { return this.elements.term.numeric; }\n    set term(v) { this.elements.term.value = v; }\n\n    // get pmi() { return this.elements.pmi.floated; }\n    // set pmi(v) { this.elements.pmi.value = v; }\n\n    // get insurance() { console.log(this.elements.insurance.floated); return this.elements.insurance.floated; }\n    // set insurance(v) { this.elements.insurance.value = v; }\n\n    // /**\n    //  * The mortgage principal is the initial loan amount.\n    //  * It's the price minus the downpayment you make.\n    //  * If a home is $500,000 and you put down $100,000,\n    //  * you'll need to borrow $400,000 from the bank.\n    //  */\n    // get mortgagePrincipal() {\n    //     return this.price - this.downpayment;\n    // }\n\n    // /**\n    //  * The interest rate percentage is divided by 12 (months in a year)\n    //  * to find the monthly interest rate.\n    //  * If the annual interest rate is 4%, the monthly interest rate is 0.33%\n    //  * or 0.0033.\n    //  */\n    // get monthlyInterestRate() {\n    //     return (this.interest / 100) / 12;\n    // }\n\n    // /**\n    //  * For a fixed-rate mortgage, the term is often 30 or 15 years.\n    //  * The number of payments is the number of years multiplied by\n    //  * 12 (months in a year). 30 years would be 360 monthly payments.\n    //  */\n    // get numberOfPayments() {\n    //     console.log('term:', this.term);\n    //     return this.term * 12;\n    // }\n\n    // /**\n    //  * The monthly mortgage principal divided by the total number\n    //  * of payments\n    //  */\n    // get monthlyMortgagePrincipal() {\n    //     // console.log(this.numberOfPayments);\n    //     return this.mortgagePrincipal / this.numberOfPayments;\n    // }\n\n    // /**\n    //  * Private mortgage insurance (PMI) is required if you put\n    //  * down less than 20% of the purchase price with a conventional mortgage.\n    //  * It's typically between 0.2% and 2% of the mortgage principal.\n    //  */\n    // get pmiCost() {\n    //     const lessThanTwentyPercent = (this.downpayment / this.price) < 0.2;\n    //     return lessThanTwentyPercent\n    //         ? ((this.pmi / 100) * this.mortgagePrincipal) / 12\n    //         : 0;\n    // }\n\n    // /**\n    //  * Property tax is a percentage of the price\n    //  * split into 12 month payments\n    //  */\n    // get taxesCost() {\n    //     return ((this.taxes / 100) * this.price) / 12;\n    // }\n\n    // /**\n    //  * Home insurance is a percentage of the price\n    //  * split into 12 month payments\n    //  */\n    // get insuranceCost() {\n    //     const insuranceCost = ((this.insurance / 100) * this.price) / 12\n    //     console.log('insurance cost', insuranceCost);\n    //     return insuranceCost;\n    // }\n\n    // get monthlyPayment() {\n    //     const monthlyPayment = this.monthlyMortgagePrincipal + this.taxesCost + this.insuranceCost + this.pmiCost\n    //     // console.log(\n    //     //     'monthlyMortgagePrincipal:', this.monthlyMortgagePrincipal,\n    //     // );\n    //     return monthlyPayment;\n    // }\n\n    // handleInput(e) {\n    //     this.output.principal.textContent = FieldInput.currencyFormat(this.monthlyMortgagePrincipal + this.interest);\n    //     this.output.taxes.textContent = FieldInput.currencyFormat(this.taxesCost);\n    //     this.output.perMonth.textContent = FieldInput.currencyFormat(this.monthlyPayment);\n    // }\n    attributeChangedCallback(attr, oldVal, newVal) {\n        if (attr === 'price') {\n            this.price = newVal;\n        } else if (attr === 'downpayment') {\n            this.downpayment = newVal;\n        } else if (attr === 'interest') {\n            this.interest = newVal;\n        } else if (attr === 'taxes') {\n            this.taxes = newVal;\n        } else if (attr === 'term') {\n            this.term = newVal;\n        }\n    }\n\n    // attributeChangedCallback(attr, oldVal, newVal) {\n    //     if (attr === 'price') {\n    //         console.log('new price');\n    //         this.price = newVal;\n    //     }\n    //     if (attr === 'downpayment') {\n    //         this.downpayment = newVal;\n    //     }\n    //     if (attr === 'interest') {\n    //         this.interest = newVal;\n    //     }\n    //     if (attr === 'taxes') {\n    //         this.taxes = newVal;\n    //     }\n    //     if (attr === 'term') {\n    //         this.term = newVal;\n    //     }\n\n    //     this.output.principal.textContent = FieldInput.currencyFormat(this.monthlyMortgagePrincipal);\n    //     this.output.taxes.textContent = FieldInput.currencyFormat(this.taxesCost);\n    //     this.output.perMonth.textContent = FieldInput.currencyFormat(this.monthlyPayment);\n    //     // console.log(this.output.principal);\n\n\n    //     // const errorMsg = this.shadowRoot.querySelector('info[role=\"alert\"]');\n    //     // if (attr === 'value' && oldVal !== newVal) {\n    //     //     console.log('setting value:', attr, oldVal, newVal);\n    //     // }\n    //     // this.hasAttribute('invalid') ? errorMsg.setAttribute('invalid', '') : errorMsg.removeAttribute('invalid');\n    // }\n\n    // disconnectedCallback() {\n    //     this.removeEventListener('input', this.handleInput);\n    // }\n}\n\nif (!window.customElements.get('mortgage-calc')) {\n    window.customElements.define('mortgage-calc', MortgageCalc);\n}\n"],"names":[],"mappings":"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"}