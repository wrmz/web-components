{"version":3,"file":"gl-google-image.factory.js","sources":["../../../../../../src/modules/map/gl-google-map/gl-google-image.factory.js"],"sourcesContent":["/*global google,GlMap*/\n\nimport { GlMap } from '../gl-map/gl-map';\n\n/**\n * GlGoogleImageFactory is a factory class to create instances of GlGoogleImage.\n * GlGoogleImage extends `google.maps.OverlayView` which is not available until the\n * Google Maps API has loaded.\n */\nexport default class GlGoogleImageFactory {\n\n    /**\n     * Creates an instance of GlGoogleImage.\n     * @static\n     * @param {GlMap} glMap - The Graphic Language Map instance.\n     * @param {HTMLElement} imageElem - The image element to be used as an overlay.\n     * @returns {GlGoogleImage} The created GlGoogleImage instance.\n     * @throws {Error} If Google Maps API is not loaded.\n     */\n    static create(glMap, imageElem) {\n        if (!google || !google.maps) {\n            throw new Error('GlGoogleImageFactory: Google Maps API was not loaded.');\n        }\n\n        /**\n         * GlGoogleImage is a class that extends google.maps.OverlayView and handles draggable image overlays.\n         */\n        class GlGoogleImage extends google.maps.OverlayView {\n\n            #previousMode = '';\n            #currentMode = '';\n            #previousState = '';\n            #currentState = '';\n            #boundaryMarkers = {\n                ne: null,\n                nw: null,\n                se: null,\n                sw: null,\n            };\n            #initialBounds = {\n                neLat: '',\n                neLng: '',\n                swLat: '',\n                swLng: '',\n            };\n            #neLat = 0.00;\n            #neLng = 0.00;\n            #swLat = 0.00;\n            #swLng = 0.00;\n            #isAdmin = false;\n            #glMap;\n            #map;\n            #bounds;\n            #aspectRatio = 1;\n            #imageElem;\n            #layerElem;\n\n            /**\n             * Creates a new GlGoogleImage\n             * @constructor\n             * @param {GlMap} glMap - The Graphic Language Map instance\n             * @param {HTMLImageElement} [imageElem] - The optional image element to overlay on the map.\n             */\n            constructor(glMap, imageElem) {\n                super();\n\n                this.#glMap = glMap;\n                this.#map = glMap.map;\n\n                this.#currentMode = GlMap.MODES.DEFAULT;\n                this.#currentState = GlMap.STATES.LOADING;\n\n                if (imageElem) {\n                    this.#initialBounds.swLat = imageElem.getAttribute('sw-lat');\n                    this.#initialBounds.swLng = imageElem.getAttribute('sw-lng');\n                    this.#initialBounds.neLat = imageElem.getAttribute('ne-lat');\n                    this.#initialBounds.neLng = imageElem.getAttribute('ne-lng');\n                    this.#imageElem = imageElem;\n                    this.#aspectRatio = imageElem.naturalHeight / imageElem.naturalWidth;\n                } else {\n                    this.#initialBounds.swLat = -179.99999;\n                    this.#initialBounds.swLng = -179.99999;\n                    this.#initialBounds.neLat = 179.99999;\n                    this.#initialBounds.neLng = 179.99999;\n                    this.#aspectRatio = 1;\n                }\n\n                this.startX = 0;\n                this.startY = 0;\n                this.isDragging = false;\n\n                this.onDragEnd = this.onDragEnd.bind(this);\n                this.onDragStart = this.onDragStart.bind(this);\n                this.onDrag = this.onDrag.bind(this);\n                this.createMarker = this.createMarker.bind(this);\n                this.setMap(this.#map);\n            }\n\n            /**\n             * Called when the mouseup event is triggered.\n             * @param {MouseEvent} e - The mouse event.\n             */\n            onDragEnd(e) {\n                if (!this.isDragging) return;\n                this.isDragging = false;\n                this.#map.setOptions({ draggable: true });\n                window.removeEventListener('mousemove', this.onDrag);\n                window.removeEventListener('mouseup', this.onDragEnd);\n                this.#layerElem.addEventListener('mousedown', this.onDragStart, false);\n            }\n\n            /**\n             * Called when the mousedown event is triggered.\n             * @param {MouseEvent} e - The mouse event.\n             */\n            onDragStart(e) {\n                this.isDragging = true;\n                this.startX = e.clientX;\n                this.startY = e.clientY;\n                this.#map.setOptions({ draggable: false });\n                this.#layerElem.removeEventListener('mousedown', this.onDragStart);\n                window.addEventListener('mousemove', this.onDrag, false);\n                window.addEventListener('mouseup', this.onDragEnd, false);\n            }\n\n            /**\n             * Called when the mousemove event is triggered while dragging.\n             * @param {MouseEvent} e - The mouse event.\n             */\n            onDrag(event) {\n                if (!this.isDragging) return;\n                const currentX = event.clientX;\n                const currentY = event.clientY;\n                const diffX = currentX - this.startX;\n                const diffY = currentY - this.startY;\n                this.pixelBounds = {\n                    sw: {\n                        x: this.pixelBounds.sw.x + diffX,\n                        y: this.pixelBounds.sw.y + diffY,\n                    },\n                    ne: {\n                        x: this.pixelBounds.ne.x + diffX,\n                        y: this.pixelBounds.ne.y + diffY,\n                    },\n                };\n\n                this.startX = currentX;\n                this.startY = currentY;\n                this.draw();\n            }\n\n            updateMarkerPositions() {\n                const newBounds = this.bounds;\n                const swLatLng = newBounds.getSouthWest();\n                const neLatLng = newBounds.getNorthEast();\n                const nwLatLng = new google.maps.LatLng(neLatLng.lat(), swLatLng.lng());\n                const seLatLng = new google.maps.LatLng(swLatLng.lat(), neLatLng.lng());\n                this.#boundaryMarkers.ne.setPosition(neLatLng);\n                this.#boundaryMarkers.nw.setPosition(nwLatLng);\n                this.#boundaryMarkers.se.setPosition(seLatLng);\n                this.#boundaryMarkers.sw.setPosition(swLatLng);\n            }\n\n            /**\n             * Callback function for when a boundary marker is dragged\n             * @param {google.maps.Marker} draggedMarker - The marker being dragged.\n             * @param {string} key - The identifier of the dragged marker (one of 'ne', 'nw', 'se', 'sw').\n             */\n            onMarkerDrag(draggedMarker, key) {\n                const newLatLng = draggedMarker.position;\n                const bounds = this.bounds;\n                const draggedMarkerPositionLat = draggedMarker.position.lat();\n                const draggedMarkerPositionLng = draggedMarker.position.lng();\n                const swLatLng = bounds.getSouthWest();\n                const neLatLng = bounds.getNorthEast();\n                const nwLatLng = new google.maps.LatLng(neLatLng.lat(), swLatLng.lng());\n                const seLatLng = new google.maps.LatLng(swLatLng.lat(), neLatLng.lng());\n\n                // Update the appropriate LatLngBounds corner based on the dragged marker's index.\n                switch (key) {\n                    case 'ne':\n                        this.bounds = new google.maps.LatLngBounds(swLatLng, newLatLng);\n                        this.#boundaryMarkers.nw.setPosition(nwLatLng);\n                        this.#boundaryMarkers.se.setPosition(seLatLng);\n                        break;\n                    case 'nw':\n                        this.bounds = new google.maps.LatLngBounds(\n                            new google.maps.LatLng(swLatLng.lat(), draggedMarkerPositionLng),\n                            new google.maps.LatLng(draggedMarkerPositionLat, neLatLng.lng())\n                        );\n                        this.#boundaryMarkers.ne.setPosition(neLatLng);\n                        this.#boundaryMarkers.sw.setPosition(swLatLng);\n                        break;\n                    case 'se':\n                        this.bounds = new google.maps.LatLngBounds(\n                            new google.maps.LatLng(draggedMarkerPositionLat, swLatLng.lng()),\n                            new google.maps.LatLng(neLatLng.lat(), draggedMarkerPositionLng)\n                        );\n                        this.#boundaryMarkers.ne.setPosition(neLatLng);\n                        this.#boundaryMarkers.sw.setPosition(swLatLng);\n                        break;\n                    case 'sw':\n                        this.bounds = new google.maps.LatLngBounds(newLatLng, neLatLng);\n                        this.#boundaryMarkers.nw.setPosition(nwLatLng);\n                        this.#boundaryMarkers.se.setPosition(seLatLng);\n                        break;\n                    default:\n                        break;\n                }\n\n\n                // Console. log the bounds so we can see the changes and set a new map image attributes\n                console.log(this.bounds.toJSON());\n\n                this.draw();\n            }\n\n\n            /**\n             * Called when the overlay is added to the map.\n             */\n            onAdd() {\n                // All 4 values for the lat/lng for ne and sw are required for any of these to be considered\n                if (this.#initialBounds.neLat && this.#initialBounds.neLng && this.#initialBounds.swLat && this.#initialBounds.swLng) {\n                    this.#swLat = parseFloat(this.#initialBounds.swLat);\n                    this.#swLng = parseFloat(this.#initialBounds.swLng);\n                    this.#neLat = parseFloat(this.#initialBounds.neLat);\n                    this.#neLng = parseFloat(this.#initialBounds.neLng);\n                    this.bounds = new google.maps.LatLngBounds(\n                        new google.maps.LatLng(this.#swLat, this.#swLng),\n                        new google.maps.LatLng(this.#neLat, this.#neLng)\n                    );\n\n                // Otherwise, we'll set reasonable defaults based on the map's boundaries and\n                // the #imageElem's aspect ratio\n                } else {\n                    this.pixelBounds = {\n                        sw: {\n                            x: 0,\n                            y: 0,\n                        },\n                        ne: {\n                            x: 1,\n                            y: -1 * this.#aspectRatio,\n                        },\n                    };\n                }\n\n                this.setupBoundaryMarkers();\n\n                if (this.#imageElem) {\n                    const panes = this.getPanes();\n\n                    this.#imageElem.remove();\n                    this.#layerElem = document.createElement('div');\n                    this.#layerElem.draggable = true;\n                    this.#layerElem.setAttribute('draggable', true);\n                    Object.assign(this.#layerElem.style, {\n                        pointerEvents: 'all',\n                        position: 'absolute',\n                        userSelect: 'none',\n                        cursor: 'hand',\n                    });\n                    Object.assign(this.#imageElem.style, {\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        display: 'block',\n                        transition: 'all .2s ease-out',\n                    });\n                    this.#layerElem.appendChild(this.#imageElem);\n                    panes.overlayLayer.appendChild(this.#layerElem);\n\n                }\n                this.recenterMap();\n                this.state = GlMap.STATES.DEFAULT;\n            }\n\n            /**\n             * Called when the overlay is to be drawn on the map.\n             */\n            draw() {\n                if (this.#layerElem) {\n                    const pixelBounds = this.pixelBounds;\n                    const width = pixelBounds.ne.x - pixelBounds.sw.x;\n                    const height = pixelBounds.sw.y - pixelBounds.ne.y;\n                    Object.assign(this.#layerElem.style, {\n                        top: `${pixelBounds.ne.y}px`,\n                        left: `${pixelBounds.sw.x}px`,\n                        width: `${width}px`,\n                        height: `${height}px`,\n                    });\n                }\n\n                if (this.isAdmin !== this.#map.isAdmin) {\n                    this.isAdmin = this.#map.isAdmin;\n                }\n            }\n\n            /**\n             * Sets up the boundary markers on the corners of the LatLngBounds.\n             */\n            setupBoundaryMarkers() {\n                const bounds = this.bounds;\n                const swLatLng = bounds.getSouthWest();\n                const neLatLng = bounds.getNorthEast();\n                const nwLatLng = new google.maps.LatLng(neLatLng.lat(), swLatLng.lng());\n                const seLatLng = new google.maps.LatLng(swLatLng.lat(), neLatLng.lng());\n\n                const cornerLatLngs = {\n                    ne: neLatLng,\n                    nw: nwLatLng,\n                    se: seLatLng,\n                    sw: swLatLng,\n                };\n\n                Object.keys(cornerLatLngs).forEach((key) => {\n                    this.#boundaryMarkers[key] = this.createMarker(cornerLatLngs[key], key);\n                });\n            }\n\n            /**\n             * Creates a new `google.maps.Marker` instance.\n             * @param {google.maps.LatLng} markerData - The LatLng object representing the marker's position\n             * @param {string} direction - The marker's cardinal position abbreviation (nw/ne/sw/se)\n             */\n            createMarker(latLng, direction) {\n                const marker = new google.maps.Marker({\n                    map: this.#map,\n                    mode: this.#currentMode,\n                    direction: direction,\n                    position: latLng,\n                    icon: {\n                        path: 'M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10Z',\n                        scale: 1,\n                        fillColor: 'white',\n                        strokeColor: 'white',\n                        fillOpacity: 0.8,\n                        strokeWeight: 2,\n                        anchor: new google.maps.Point(10, 10)\n                    },\n                    visible: false,\n                    draggable: false,\n                });\n                marker.addListener('drag', this.onMarkerDrag.bind(this, marker, direction));\n                return marker;\n            }\n\n            /**\n             * Recenters the map to fit the bounds of the image.\n             */\n            recenterMap() {\n                const imageBounds = this.bounds;\n                this.#map.fitBounds(this.bounds, 0);\n            }\n\n            /**\n             * Switches between ADMIN and DEFAULT modes.\n             */\n            switchModes() {\n                // Cleanup\n                if (this.#previousMode === GlMap.MODES.ADMIN) {\n\n                }\n\n                // New mode settings\n                if (this.mode === GlMap.MODES.ADMIN) {\n\n                }\n            }\n\n            switchStates() {\n                const panes = this.getPanes();\n\n                // Cleanup\n                if (this.#previousState === GlMap.STATES.LOADING) {\n                    this.#glMap.pingLoadState(this);\n                }\n                if (this.#previousState === GlMap.STATES.RESIZING) {\n                    this.#layerElem.style.boxShadow = 'none';\n                    this.#imageElem.style.backdropFilter = 'blur(0) brightness(1)';\n                    Object.values(this.#boundaryMarkers).forEach((marker) => {\n                        marker.setDraggable(false);\n                        marker.setVisible(false);\n                    });\n                }\n                if (this.#previousState === GlMap.STATES.DRAGGING) {\n                    this.#layerElem.removeEventListener('mousedown', this.onDragStart);\n                    this.#layerElem.remove();\n                    panes.overlayLayer.appendChild(this.#layerElem);\n                }\n\n                // New state settings\n                if (this.state === GlMap.STATES.LOADING) {\n\n                }\n                if (this.state === GlMap.STATES.RESIZING) {\n                    this.updateMarkerPositions();\n                    this.#layerElem.style.boxShadow = '0 0 0 2px #0388d1';\n                    this.#imageElem.style.backdropFilter = 'blur(2px) brightness(1.3)';\n                    Object.values(this.#boundaryMarkers).forEach((marker) => {\n                        marker.setDraggable(true);\n                        marker.setVisible(true);\n                    });\n                }\n\n                if (this.state === GlMap.STATES.DRAGGING) {\n                    this.#layerElem.remove();\n                    panes.overlayMouseTarget.appendChild(this.#layerElem);\n                    this.#layerElem.addEventListener('mousedown', this.onDragStart, false);\n                }\n            }\n\n            /**\n             * Called when the overlay is removed from the map.\n             */\n            onRemove() {\n                if (this.#layerElem) {\n                    window.removeEventListener('mousemove', this.onDrag, false);\n                    this.#layerElem.removeEventListener('mousedown', this.onDragStart, false);\n                    this.#layerElem.removeEventListener('mouseup', this.onDragEnd, false);\n                    this.#layerElem.remove();\n                    this.#layerElem = null;\n                    this.#imageElem = null;\n                }\n            }\n\n            get neLat() { return isNaN(this.#neLat) ? 0 : this.#neLat; }\n            get neLng() { return isNaN(this.#neLng) ? 0 : this.#neLng; }\n            get swLat() { return isNaN(this.#swLat) ? 0 : this.#swLat; }\n            get swLng() { return isNaN(this.#swLng) ? 0 : this.#swLng; }\n            set pixelBounds(newPixelBounds) {\n                const projection = this.getProjection();\n                const newNELatLng = projection.fromDivPixelToLatLng(newPixelBounds.ne);\n                const newSWLatLng = projection.fromDivPixelToLatLng(newPixelBounds.sw);\n                this.bounds = new google.maps.LatLngBounds(newSWLatLng, newNELatLng);\n            }\n            get pixelBounds() {\n                const projection = this.getProjection();\n                const boundsSW = this.bounds.getSouthWest();\n                const boundsNE = this.bounds.getNorthEast();\n                return {\n                    sw: projection.fromLatLngToDivPixel(boundsSW),\n                    ne: projection.fromLatLngToDivPixel(boundsNE),\n                };\n            }\n            get position() { return this.#map.getCenter(); }\n            set bounds(latLngBounds) {\n                const swLatLng = latLngBounds.getSouthWest();\n                const neLatLng = latLngBounds.getNorthEast();\n                this.#swLat = swLatLng.lat();\n                this.#swLng = swLatLng.lng();\n                this.#neLat = neLatLng.lat();\n                this.#neLng = neLatLng.lng();\n            }\n            /**\n             * Gets the current LatLngBounds of the image overlay\n             * @returns {google.maps.LatLngBounds} - The LatLngBounds object.\n             */\n            get bounds() {\n                return new google.maps.LatLngBounds(\n                    new google.maps.LatLng(this.#swLat, this.#swLng),\n                    new google.maps.LatLng(this.#neLat, this.#neLng)\n                );\n            }\n\n            /**\n             * Sets the admin mode for the image overlay.\n             * @param {boolean} val - The admin mode. Set to true for admin mode, false otherwise.\n             */\n            set isAdmin(val) {\n                this.#isAdmin = val;\n                this.mode = val ? GlMap.MODES.ADMIN : GlMap.MODES.DEFAULT;\n            }\n\n            /**\n             * Gets the current mode of the GlGoogleImage instance.\n             * @returns {string} The current mode\n             */\n            get mode() { return this.#currentMode; }\n\n            /**\n             * Sets the current mode of the GlGoogleImage instance, if the provided mode is valid.\n             * @param {string} newMode - The new mode to set.\n             */\n            set mode(newMode) {\n                if (!newMode || newMode === this.#currentMode) return;\n                if (Object.values(GlMap.MODES).includes(newMode)) {\n                    this.#previousMode = this.#currentMode;\n                    this.#currentMode = newMode;\n                    this.switchModes();\n                } else {\n                    console.error(`Invalid mode: ${newMode}`);\n                }\n            }\n\n            /**\n             * Gets the current state of the GlGoogleImage instance\n             * @returns {string} The current state\n             */\n            get state() { return this.#currentState; }\n\n            /**\n             * Sets the current state of the GlGoogleImage instance, if the provided state is valid.\n             * @param {string} newState - The new state to set.\n             */\n            set state(newState) {\n                if (!newState || newState === this.#currentState) return;\n                if (Object.values(GlMap.STATES).includes(newState)) {\n                    this.#previousState = this.#currentState;\n                    this.#currentState = newState;\n                    this.switchStates();\n                } else {\n                    console.error(`Invalid state: ${newState}`);\n                }\n            }\n        }\n\n        return new GlGoogleImage(glMap, imageElem);\n    }\n}\n"],"names":[],"mappings":"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"}