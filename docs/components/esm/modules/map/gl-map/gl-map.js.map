{"version":3,"file":"gl-map.js","sources":["../../../../../../src/modules/map/gl-map/gl-map.js"],"sourcesContent":["import { registerComponents } from '../../common/register-components';\nimport { GlGoogleMap } from '../gl-google-map/gl-google-map';\nimport { GlMarker } from './gl-marker.js';\n\n// https://www.ecisolutions.com/products/lotvue/\n// https://mandalayhomes.com/communities/jasper/\n\n/**\n * @injectHTML\n */\nexport class GlMap extends HTMLElement {\n    static observedAttributes = [\n        'type',\n        'key',\n        'latitude',\n        'longitude',\n        'map-style',\n        'map-tiles',\n        'marker-color',\n    ];\n\n    static #instances = new Set();\n\n    /**\n     * @property {Object} TYPES - An object containing different types for the GlMap. Eeach type represents a specific map type\n     * @property {string} TYPES.GOOGLE - The google map type (requires a license key)\n     * @property {string} TYPES.MAPBOX - The mapbox map type (requires a license key)\n     * @property {string} TYPES.IMAGE - The image map type\n     * @property {string} TYPES.TILE - the tile map type\n     */\n    static TYPES = {\n        GOOGLE: 'google',\n        MAPBOX: 'mapbox',\n        IMAGE: 'image',\n        TILE: 'tile',\n    };\n\n    /**\n     * @property {Object} MODES - An object containing different modes for the GlMap. Each mode represents a specific user interaction with the image.\n     * @property {string} MODES.ADMIN - The admin mode, in which the image layer is drawn on the overlayMouseTarget layer.\n     * @property {string} MODES.DEFAULT - The default mode, in which the image layer is drawn on the overlayLayer.\n     */\n    static MODES = {\n        ADMIN: 'admin',\n        DEFAULT: 'default',\n    };\n\n    /**\n     * @property {Object} STATES - An object containing different states for the GlMap. Each state represents a specific behavior or interaction the image can have during its lifecycle.\n     * @property {string} STATES.DEFAULT - The default state, in which the image behaves normally.\n     * @property {string} STATES.DETAIL - The detail state, in which a marker detail is displayed.\n     * @property {string} STATES.LOADING - The loading state, indicating that the image is being loaded.\n     * @property {string} STATES.CONFIRMING - The confirming state indicating that the user is confirming changes to the image.\n     * @property {string} STATES.RESIZING - The resizing state, indicating that the user is resizing the image.\n     * @property {string} STATES.DRAGGING - The dragging state, indicating that the user is dragging the image.\n     */\n    static STATES = {\n        DEFAULT: 'default',\n        DETAIL: 'detail',\n        LOADING: 'loading',\n        CONFIRMING: 'confirming',\n        RESIZING: 'resizing',\n        DRAGGING: 'dragging',\n        ADDING_MARKER: 'adding_marker',\n        REMOVING_MARKER: 'removing_marker',\n        POSITIONING_MARKER: 'positioning_marker',\n    };\n\n    static #googleMapsApiEndpoint = 'https://maps.googleapis.com/maps/api/js';\n    static #mapboxApiEndpoint = '';\n\n    static #googleApiKey = '';\n    static #isGoogleApiLoading = false;\n    static #isGoogleApiLoaded = false;\n\n    static #mapboxApiKey = '';\n    static #isMapboxApiLoading = false;\n    static #isMapboxApiLoaded = false;\n\n    /**\n     * Registers a component\n     * @static\n     * @param {Array<Object>} [component]\n     */\n    static registerComponents(components = []) {\n        registerComponents(components);\n    }\n\n    /**\n     * Handles the Google Maps Api Loaded event. Inits all google maps instances\n     * and sets the static private isGoogleApiLoaded and isGoogleApiLoading flags.\n     * @static\n     */\n    static onGoogleMapsApiLoaded() {\n        for (const instance of GlMap.#instances) {\n            if (instance.type === 'google') {\n                instance.initGoogleMap();\n            }\n        }\n        GlMap.#isGoogleApiLoaded = true;\n        GlMap.#isGoogleApiLoading = false;\n    }\n\n    /**\n     * @static\n     * @param {String} key - Api key\n     */\n    static loadGoogleMapApi(key) {\n        const hasScript = document.getElementById('google_map_script');\n        const hasLoaded = GlMap.#isGoogleApiLoaded;\n\n        if (!hasScript) {\n            const script = document.createElement('script');\n            script.id = 'google_map_script';\n            script.type = 'text/javascript';\n            script.defer = true;\n            script.async = true;\n            script.src = `${GlMap.#googleMapsApiEndpoint}?key=${GlMap.#googleApiKey}&callback=onGoogleMapsApiLoaded`;\n            window['onGoogleMapsApiLoaded'] = GlMap.onGoogleMapsApiLoaded;\n            GlMap.#isGoogleApiLoading = true;\n            document.head.appendChild(script);\n        }\n    }\n\n    /**\n     * @static\n     * @param {String} type - google, mapbox, etc\n     * @param {String} key - Api key\n     */\n    static loadMapApi(type, key) {\n        switch (type) {\n            case 'google':\n                GlMap.registerComponents(GlGoogleMap, GlMarker);\n                GlMap.loadGoogleMapApi(key);\n                break;\n            default:\n                console.error(`GL Map does not recognize the ${type} map API.`);\n        }\n    }\n\n    #id = crypto.randomUUID ? crypto.randomUUID().split('-').pop() : Math.round(Math.random() * 9999);\n    #isLoaded = false;\n    #isAdmin = false;\n    #previousMode = '';\n    #currentMode = GlMap.MODES.DEFAULT;\n    #previousState = '';\n    #currentState = GlMap.STATES.LOADING;\n\n    #glMap;\n    #mutationObserver;\n\n    // Child elements\n    #loaderElem;\n    #progressElem;\n    #dialogElem;\n    #dialogCloseElem;\n    #dialogCancelElem;\n    #legendElem;\n    #legendToggleElem;\n    #legendDrawerElem;\n    #imageElem;\n    #detailElem;\n    #detailContentElem;\n    #detailCloseElem;\n    #mapElem;\n    #elem;\n    #loadDetailTimeout;\n    #markerElems = [];\n\n    #switchModes() {\n\n    }\n\n    #switchStates() {\n\n    }\n\n    constructor() {\n        super();\n\n        // Event handlers\n        this.onMapUpdated = this.onMapUpdated.bind(this);\n        this.onMutations = this.onMutations.bind(this);\n        this.onDialogClose = this.onDialogClose.bind(this);\n        this.onKeydown = this.onKeydown.bind(this);\n        this.onLegendToggleElemClick = this.onLegendToggleElemClick.bind(this);\n        this.confirmDeletion = this.confirmDeletion.bind(this);\n        this.cancelDialog = this.cancelDialog.bind(this);\n        this.openDetail = this.openDetail.bind(this);\n        this.closeDetail = this.closeDetail.bind(this);\n\n        GlMap.#instances.add(this);\n\n        if (this.type === 'google' && !this.#isLoaded && GlMap.#isGoogleApiLoaded) {\n            this.initGoogleMap();\n        }\n    }\n\n    initGoogleMap() {\n        this.#glMap = new GlGoogleMap(this.#id, this.#mapElem, {\n            latitude: this.latitude,\n            longitude: this.longitude,\n            mapStyle: this.mapStyle,\n            mapTiles: this.mapTiles,\n            legendElem: this.#legendElem,\n            imageElem: this.#imageElem,\n            markerElems: this.#markerElems,\n            detailElem: this.#detailElem,\n        });\n\n        this.#glMap.subscribe(this.onMapUpdated);\n    }\n\n    /**\n     * Handles the keyboard keyup event\n     * @param {KeyboardEvent} e - The keyboard event\n     */\n    onKeydown(e) {\n        if (e.key === 'Escape') {\n            this.cancelDialog();\n        }\n    }\n\n\n    /**\n     * Cancels the dialog modal\n     */\n    cancelDialog() {\n        this.#dialogElem.returnValue = '';\n        this.#dialogElem.close();\n    }\n\n    /**\n     * Closes the dialog\n     * @param {Event} e - The dialog close event.\n     */\n    onDialogClose(e) {\n        window.removeEventListener('keyup', this.onKeydown);\n        this.#dialogElem.removeEventListener('close', this.onDialogClose);\n        this.#dialogCloseElem.removeEventListener('click', this.cancelDialog);\n        this.#dialogCancelElem.removeEventListener('click', this.cancelDialog);\n\n        // If user has confirmed, there will be a return value\n        if (!this.#dialogElem.returnValue) {\n\n        } else {\n            // The confirmation result depends on the state the component is in\n            switch (this.state) {\n                case GlMap.STATES.REMOVING_MARKER:\n                    this.removeMarker(this.#dialogElem.returnValue);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Reset the return value\n        this.#dialogElem.returnValue = '';\n    }\n\n    /**\n     * Opens a dialog for confirming the deletion of a marker\n     * @param {GlMarker} glMarker\n     */\n    confirmDeletion(glMarker) {\n        this.#dialogElem.returnValue = glMarker.id;\n        this.#dialogElem.show();\n        window.addEventListener('keyup', this.onKeydown, false);\n        this.#dialogElem.addEventListener('close', this.onDialogClose, false);\n        this.#dialogCloseElem.addEventListener('click', this.cancelDialog, false);\n        this.#dialogCancelElem.addEventListener('click', this.cancelDialog, false);\n    }\n\n\n    /**\n     * Toggles the legend visibility via CSS by changing the `aria-expanded` attribute value\n     */\n    onLegendToggleElemClick() {\n        if (this.#legendToggleElem.getAttribute('aria-expanded') === 'true') {\n            this.#legendToggleElem.setAttribute('aria-expanded', false);\n        } else {\n            this.#legendToggleElem.setAttribute('aria-expanded', true);\n        }\n    }\n\n\n    /**\n     * @todo - Nearly all of these should emit an event from GlMap\n     * @param {string} updateType\n     * @param {*} data\n     */\n    onMapUpdated(updateType, data) {\n        switch (updateType) {\n            case 'load':\n                if (data.progress && !isNaN(data.progress)) {\n                    this.#progressElem.style.transform = `scaleX(${data.progress / 100})`;\n                    if (data.progress === 100) this.state = GlMap.STATES.DEFAULT;\n                }\n                break;\n            case 'state':\n                if (this.state !== data) {\n                    this.state = data;\n                }\n                break;\n            case 'marker-mouseover':\n                break;\n            case 'marker-mouseout':\n                break;\n            case 'marker-click':\n                if (this.state === GlMap.STATES.REMOVING_MARKER) {\n                    this.confirmDeletion(data.glMarker);\n                } else {\n                    this.loadDetail(data.glMarker);\n                }\n                break;\n            case 'marker-dragend':\n                break;\n            case 'marker-added':\n                this.addMarker(data.glMarker);\n                break;\n            default:\n                this.state = GlMap.STATES.DEFAULT;\n                console.warn(`Unsupported map update type: \"${updateType}\".`);\n                break;\n        }\n    }\n\n\n\n    /**\n     * Loads the detail for a selected GlMarker\n     * @param {GlMarker} glMarker\n     */\n    loadDetail(glMarker) {\n        const markerChildren = glMarker ? [...glMarker.children] : [];\n\n        while (this.#detailContentElem.firstChild) {\n            this.#detailContentElem.removeChild(this.#detailContentElem.lastChild);\n        }\n\n        markerChildren.forEach((child) => {\n            this.#detailContentElem.appendChild(child.cloneNode(true));\n        });\n\n        this.#loadDetailTimeout = setTimeout(this.openDetail, 200);\n    }\n\n    /**\n     * Shows the detail by adding a class to the root element\n     */\n    openDetail() {\n        this.state = GlMap.STATES.DETAIL;\n        this.#detailCloseElem.addEventListener('click', this.closeDetail, false);\n    }\n\n    /**\n     * Closes the detail\n     */\n    closeDetail() {\n        this.state = GlMap.STATES.DEFAULT;\n        this.#glMap.closeDetail();\n        this.#detailCloseElem.removeEventListener('click', this.closeDetail);\n    }\n\n    /**\n     * Adds a marker to the map\n     * @param {GlMarker} markerElem - The Gl Marker to add to the map\n     */\n    addMarker(markerElem) {\n        this.#markerElems.push(markerElem);\n\n        if (this.type === GlMap.TYPES.GOOGLE) {\n            this.#glMap.markers = [...this.#markerElems];\n        }\n    }\n\n    /**\n     * Removes a marker from the map\n     * @param {GlMarker|string} markerElem - Either the Gl Marker or id selector for a Gl Marker\n     */\n    removeMarker(markerElem) {\n        let glMarker = markerElem;\n\n        if (typeof glMarker === 'string') {\n            const markerElemIndex = this.#markerElems.findIndex((m) => m.id === glMarker);\n\n            if (markerElemIndex === -1) {\n                console.warn(`Could not find a marker with the ID \"${markerElem}\"`);\n            }\n\n            glMarker = this.#markerElems.splice(markerElemIndex, 1)[0];\n        }\n\n        switch (this.type) {\n            case GlMap.TYPES.GOOGLE:\n                glMarker.mapMarker.setMap(null);\n                break;\n            default:\n                break;\n        }\n    }\n\n    onMutations(mutations) {\n        for (const mutation of mutations) {\n            if (mutation.type === 'childList') {\n                for (const addedNode of mutation.addedNodes) {\n                    if (addedNode.tagName === 'GL-MARKER') {\n                        this.addMarker(addedNode);\n                    }\n                }\n\n                for (const removedNode of mutation.removedNodes) {\n                    if (removedNode.tagName === 'GL-MARKER') {\n                        this.removeMarker(removedNode);\n                    }\n                }\n            }\n        }\n    }\n\n    initializeObserver() {\n        this.#mutationObserver = new MutationObserver(this.onMutations);\n        this.#mutationObserver.observe(this, { childList: true });\n    }\n\n    switchStates() {\n        // Cleanup\n        this.#elem.classList.remove(this.#previousState);\n        switch (this.#previousState) {\n            case GlMap.STATES.LOADING:\n                this.#loaderElem.classList.remove('loading');\n                this.#loaderElem.classList.add('loaded');\n                break;\n            case GlMap.STATES.ADDING_MARKER:\n                break;\n            case GlMap.STATES.DETAIL:\n                break;\n            default:\n                break;\n        }\n\n        this.#elem.classList.add(this.state);\n        switch (this.state) {\n            case GlMap.STATES.LOADING:\n                this.#loaderElem.classList.add('loading');\n                break;\n            case GlMap.STATES.ADDING_MARKER:\n                break;\n            case GlMap.STATES.DETAIL:\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * LIFECYCLE HOOK ✨\n     * Invoked when the element is appended to the document,\n     * may get called before element's contents are fully parsed.\n     */\n    connectedCallback() {\n        // Doublecheck that the element is in fact connected,\n        // as this lifecycle hook may be called after the element is\n        // no longer connected.\n        if (this.isConnected) {\n            this.#imageElem = this.querySelector('img');\n\n            this.#markerElems = [...this.querySelectorAll('gl-marker')];\n            this.#markerElems.forEach((glM) => glM.remove());\n            this.#dialogElem = this.shadowRoot.querySelector('.gl-map__dialog');\n            this.#dialogCloseElem = this.shadowRoot.querySelector('.gl-map__dialog-close');\n            this.#dialogCancelElem = this.shadowRoot.querySelector('.gl-map__dialog-cancel');\n            this.#detailElem = this.shadowRoot.querySelector('.gl-map__detail');\n            this.#detailContentElem = this.shadowRoot.querySelector('.gl-map__detail-content');\n            this.#detailCloseElem = this.shadowRoot.querySelector('.gl-map__detail-close');\n            this.#legendElem = this.shadowRoot.querySelector('.gl-map__legend');\n            this.#legendDrawerElem = this.shadowRoot.querySelector('.gl-map__legend-drawer');\n            this.#legendToggleElem = this.shadowRoot.querySelector('.gl-map__legend-toggle');\n            this.#loaderElem = this.shadowRoot.querySelector('.gl-map__loader');\n            this.#progressElem = this.shadowRoot.querySelector('.gl-map__progress');\n            this.#mapElem = this.shadowRoot.querySelector('.gl-map__map');\n            this.#elem = this.shadowRoot.querySelector('.gl-map');\n\n            if (this.#imageElem) {\n                this.#imageElem.remove();\n            }\n\n            if (this.#legendElem) {\n                this.#legendElem.remove();\n            }\n\n            this.#elem.setAttribute('id', `map_${this.#id}`);\n\n            if (this.#legendElem) {\n                this.#legendDrawerElem.id = `gl_legend_${this.#id}`;\n                this.#legendToggleElem.id = `gl_legend_toggle_${this.#id}`;\n                this.#legendToggleElem.setAttribute('aria-controls', this.#legendDrawerElem.id);\n                this.#legendToggleElem.setAttribute('aria-expanded', false);\n                this.#legendToggleElem.addEventListener('click', this.onLegendToggleElemClick, false);\n            }\n        }\n\n        this.initializeObserver();\n    }\n\n    /**\n     * LIFECYCLE HOOK ✨\n     * Invoked each time the element is moved to a new document.\n     */\n    adoptedCallback() {\n\n    }\n\n    /**\n     * LIFECYCLE HOOK ✨\n     * Invoked when the element has an attribute added, removed or changed.\n     * Only applies to attributes listed in `observedAttributes`.\n     * @param {String} name\n     * @param {String} oldValue\n     * @param {String} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'key' && newValue) {\n            this.key = newValue;\n        }\n\n        if (name === 'marker-color' && newValue) {\n            console.log('changing the marker color to', newValue, 'for map', this.id);\n        }\n\n        if (name === 'map-tiles' && newValue) {\n            console.log('map tiles changed to:', newValue, 'for map', this.id);\n        }\n\n        // Only tries the map api once per instance\n        if (this.key && this.type && !GlMap.#isGoogleApiLoaded && !GlMap.#isGoogleApiLoading) {\n            GlMap.loadMapApi(this.type, this.key);\n        }\n    }\n\n    /**\n     * LIFECYCLE HOOK ✨\n     * Invoked when the element is disconnected from the document's DOM.\n     * @todo prep for GC\n     */\n    disconnectedCallback() {\n        this.#mutationObserver.disconnect();\n        if (this.legendToggleElem) {\n            this.glLegendToggle.removeEventListener('click', this.toggleLegend);\n        }\n        if (this.#loadDetailTimeout) {\n            clearTimeout(this.#loadDetailTimeout);\n        }\n    }\n\n    get key() {\n        let key = 'unknown';\n\n        switch (this.type) {\n            case 'google': return GlMap.#googleApiKey;\n            case 'mapbox': return GlMap.#mapboxApiKey;\n            default: return 'unknown';\n        }\n    }\n\n    set key(val) {\n        let key = '';\n\n        switch (this.type) {\n            case 'google':\n                GlMap.#googleApiKey = val;\n                break;\n            case 'mapbox':\n                GlMap.#mapboxApiKey = val;\n                break;\n            default:\n                console.warn('GLMap attempted to set an api key before the map type was known');\n                break;\n        }\n\n        if (this.hasAttribute('key')) {\n            this.removeAttribute('key');\n        }\n    }\n\n    /**\n     * Type of map (\"google\", \"mapbox\")\n     * @type {String}\n     */\n    get type() { return this.getAttribute('type'); }\n\n    /**\n     * Gets the current mode of the GlGoogleMap instance.\n     * @returns {string} The current mode\n     */\n    get mode() { return this.#currentMode; }\n\n    /**\n     * Sets the current mode of the GlGoogleMap instance, if the provided mode is valid.\n     * @param {string} newMode - The new mode to set.\n     */\n    set mode(newMode) {\n        if (!newMode || newMode === this.#currentMode) return;\n        if (Object.values(GlMap.MODES).includes(newMode)) {\n            this.#previousMode = this.#currentMode;\n            this.#currentMode = newMode;\n            switch (this.type) {\n                case 'google':\n                    this.#glMap.mode = newMode;\n                    break;\n                case 'mapbox':\n                    break;\n                default:\n                    console.warn('GlMap attempted to set a mode for a map without a known type:', this.type);\n                    break;\n            }\n        } else {\n            console.error(`Invalid mode: ${newMode}`);\n        }\n    }\n\n    /**\n     * Gets the current state of the GlGoogleMap instance\n     * @returns {string} The current state\n     */\n    get state() { return this.#currentState; }\n\n    /**\n     * Sets the current state of the GlGoogleMap instance, if the provided state is valid.\n     * @param {string} newState - The new state to set.\n     */\n    set state(newState) {\n        if (!newState || newState === this.#currentState) return;\n        if (Object.values(GlMap.STATES).includes(newState)) {\n            this.#previousState = this.#currentState;\n            this.#currentState = newState;\n            this.switchStates();\n        } else {\n            console.error(`Invalid state: ${newState}`);\n        }\n    }\n\n    get isAdmin() { return this.#isAdmin; }\n\n    set isAdmin(val) {\n        if (val) {\n            this.setAttribute('is-admin', val);\n        } else if (this.hasAttribute) {\n            this.removeAttribute('is-admin');\n        }\n        this.#isAdmin = val;\n\n        if (this.glGoogleMap) {\n            this.glGoogleMap.isAdmin = val;\n        }\n    }\n\n    get map() { return this.#glMap.map; }\n\n    get latitude() {\n        const latitude = parseFloat(this.hasAttribute('latitude') ? this.getAttribute('latitude') : '0');\n        return  isNaN(latitude) ? 0 : latitude;\n    }\n\n    set latitude(newLatitude) { this.setAttribute('latitude', newLatitude); }\n\n    get longitude() {\n        const longitude = parseFloat(this.hasAttribute('longitude') ? this.getAttribute('longitude') : '0');\n        return  isNaN(longitude) ? 0 : longitude;\n    }\n\n    set longitude(newLongitude) { this.setAttribute('longitude', newLongitude); }\n\n    get mapTiles() { return this.getAttribute('map-tiles'); }\n\n    set mapTiles(newMapTiles) { this.setAttribute('map-tiles', newMapTiles); }\n\n    get mapStyle() { return this.getAttribute('map-style'); }\n\n    /**\n     * Sets the default map style for this map instance\n     * @param {string} newMapStyle - The path to the JSON map styles\n     */\n    set mapStyle(newMapStyle) {\n        if (newMapStyle) {\n            this.setAttribute('map-style', newMapStyle);\n        } else if (this.hasAttribute('map-style')) {\n            this.removeAttribute('map-style');\n        }\n    }\n\n    /**\n     * Gets the defeault marker color for this map instance\n     * @returns {string} - The current hex color if it exists\n     */\n    get markerColor() { return this.getAttribute('marker-color'); }\n\n    /**\n     * Sets the default marker color for this map instance\n     * @param {string} newMarkerColor - The new hex color\n     */\n    set markerColor(newMarkerColor) { this.setAttribute('marker-color', newMarkerColor); }\n}\n\nif (!window.customElements.get('gl-map')) {\n    window.customElements.define('gl-map', GlMap);\n}\n"],"names":[],"mappings":"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"}